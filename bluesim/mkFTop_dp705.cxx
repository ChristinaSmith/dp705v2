/*
 * Generated by Bluespec Compiler, version 2012.09.beta1 (build 29570, 2012-09.11)
 * 
 * On Sun Oct  7 15:17:28 EDT 2012
 * 
 */
#include "bluesim_primitives.h"
#include "mkFTop_dp705.h"


/* String declarations */
static std::string const __str_literal_2("Max Length: %d, Min Length: %d", 30u);
static std::string const __str_literal_1("Message Count: %d || Length: %d || Last word rcv'd: %0x",
					 55u);
static std::string const __str_literal_3("Message Error: %0x, %0x", 23u);


/* Constructor */
MOD_mkFTop_dp705::MOD_mkFTop_dp705(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_buf1(simHdl, "buf1", this),
    INST_chk_buff(simHdl, "chk_buff", this, 33u, 2863311530llu, (tUInt8)0u),
    INST_chk_buffF(simHdl, "chk_buffF", this, 33u, 2u, 1u, 0u),
    INST_chk_check(simHdl, "chk_check", this, 33u, 2863311530llu, (tUInt8)0u),
    INST_chk_checkF(simHdl, "chk_checkF", this, 33u, 2u, 1u, 0u),
    INST_chk_cmpEOP(simHdl, "chk_cmpEOP", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_chk_cmpEOP_1(simHdl, "chk_cmpEOP_1", this, 1u, (tUInt8)0u),
    INST_chk_cmpFire(simHdl, "chk_cmpFire", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_chk_cmpFire_1(simHdl, "chk_cmpFire_1", this, 1u, (tUInt8)0u),
    INST_chk_cmpMatch(simHdl, "chk_cmpMatch", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_chk_cmpMatch_1(simHdl, "chk_cmpMatch_1", this, 1u, (tUInt8)0u),
    INST_chk_incorrect(simHdl, "chk_incorrect", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_chk_maxLen(simHdl, "chk_maxLen", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_chk_mesgCnt(simHdl, "chk_mesgCnt", this, 8u, (tUInt8)1u, (tUInt8)0u),
    INST_chk_minLen(simHdl, "chk_minLen", this, 8u, (tUInt8)255u, (tUInt8)0u),
    INST_chk_wordCnt(simHdl, "chk_wordCnt", this, 8u, (tUInt8)1u, (tUInt8)0u),
    INST_cycleCounter(simHdl, "cycleCounter", this, 16u, 0u, (tUInt8)0u),
    INST_gen1_count(simHdl, "gen1_count", this, 9u, 0u, (tUInt8)0u),
    INST_gen1_initV(simHdl, "gen1_initV", this, 32u, 16909060u, (tUInt8)0u),
    INST_gen1_lfsr_r(simHdl, "gen1_lfsr_r", this, 32u, 1u, (tUInt8)0u),
    INST_gen1_maxLen(simHdl, "gen1_maxLen", this, 9u, 0u, (tUInt8)0u),
    INST_gen1_mesgLen(simHdl, "gen1_mesgLen", this, 9u, 10u, (tUInt8)0u),
    INST_gen1_mesgOutF(simHdl, "gen1_mesgOutF", this, 33u, 2u, 1u, 0u),
    INST_gen1_minLen(simHdl, "gen1_minLen", this, 9u, 511u, (tUInt8)0u),
    INST_gen1_patternV(simHdl, "gen1_patternV", this, 32u, 66051u, (tUInt8)0u),
    INST_gen1_randomF(simHdl, "gen1_randomF", this, 9u, 2u, 1u, 0u),
    INST_gen1_seedLFSR(simHdl, "gen1_seedLFSR", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_gen1_startLFSR(simHdl, "gen1_startLFSR", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_gen1_tmp(simHdl, "gen1_tmp", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_gen2_count(simHdl, "gen2_count", this, 9u, 0u, (tUInt8)0u),
    INST_gen2_initV(simHdl, "gen2_initV", this, 32u, 16909060u, (tUInt8)0u),
    INST_gen2_lfsr_r(simHdl, "gen2_lfsr_r", this, 32u, 1u, (tUInt8)0u),
    INST_gen2_maxLen(simHdl, "gen2_maxLen", this, 9u, 0u, (tUInt8)0u),
    INST_gen2_mesgLen(simHdl, "gen2_mesgLen", this, 9u, 10u, (tUInt8)0u),
    INST_gen2_mesgOutF(simHdl, "gen2_mesgOutF", this, 33u, 2u, 1u, 0u),
    INST_gen2_minLen(simHdl, "gen2_minLen", this, 9u, 511u, (tUInt8)0u),
    INST_gen2_patternV(simHdl, "gen2_patternV", this, 32u, 66051u, (tUInt8)0u),
    INST_gen2_randomF(simHdl, "gen2_randomF", this, 9u, 2u, 1u, 0u),
    INST_gen2_seedLFSR(simHdl, "gen2_seedLFSR", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_gen2_startLFSR(simHdl, "gen2_startLFSR", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_gen2_tmp(simHdl, "gen2_tmp", this, 1u, (tUInt8)1u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 94u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkFTop_dp705::init_symbols_0()
{
  init_symbol(&symbols[0u], "buf1", SYM_MODULE, &INST_buf1);
  init_symbol(&symbols[1u],
	      "CAN_FIRE_RL_chk_cmpEOP__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update,
	      1u);
  init_symbol(&symbols[2u],
	      "CAN_FIRE_RL_chk_cmpFire__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update,
	      1u);
  init_symbol(&symbols[3u],
	      "CAN_FIRE_RL_chk_cmpMatch__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update,
	      1u);
  init_symbol(&symbols[4u], "CAN_FIRE_RL_chk_compare", SYM_DEF, &DEF_CAN_FIRE_RL_chk_compare, 1u);
  init_symbol(&symbols[5u], "CAN_FIRE_RL_cycleCount", SYM_DEF, &DEF_CAN_FIRE_RL_cycleCount, 1u);
  init_symbol(&symbols[6u],
	      "CAN_FIRE_RL_gen1_genMesgEOP",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen1_genMesgEOP,
	      1u);
  init_symbol(&symbols[7u],
	      "CAN_FIRE_RL_gen1_genMesgNotEOP",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen1_genMesgNotEOP,
	      1u);
  init_symbol(&symbols[8u],
	      "CAN_FIRE_RL_gen1_setMsgLen",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen1_setMsgLen,
	      1u);
  init_symbol(&symbols[9u],
	      "CAN_FIRE_RL_gen1_setupLFSR",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen1_setupLFSR,
	      1u);
  init_symbol(&symbols[10u],
	      "CAN_FIRE_RL_gen2_genMesgEOP",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen2_genMesgEOP,
	      1u);
  init_symbol(&symbols[11u],
	      "CAN_FIRE_RL_gen2_genMesgNotEOP",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen2_genMesgNotEOP,
	      1u);
  init_symbol(&symbols[12u],
	      "CAN_FIRE_RL_gen2_setMsgLen",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen2_setMsgLen,
	      1u);
  init_symbol(&symbols[13u],
	      "CAN_FIRE_RL_gen2_setupLFSR",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_gen2_setupLFSR,
	      1u);
  init_symbol(&symbols[14u], "CAN_FIRE_RL_gobble", SYM_DEF, &DEF_CAN_FIRE_RL_gobble, 1u);
  init_symbol(&symbols[15u],
	      "CAN_FIRE_RL_mkConnectionGetPut",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut,
	      1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_RL_mkConnectionGetPut_1",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_1,
	      1u);
  init_symbol(&symbols[17u],
	      "CAN_FIRE_RL_mkConnectionGetPut_2",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_mkConnectionGetPut_2,
	      1u);
  init_symbol(&symbols[18u], "chk_buff", SYM_MODULE, &INST_chk_buff);
  init_symbol(&symbols[19u], "chk_buffF", SYM_MODULE, &INST_chk_buffF);
  init_symbol(&symbols[20u], "chk_check", SYM_MODULE, &INST_chk_check);
  init_symbol(&symbols[21u], "chk_checkF", SYM_MODULE, &INST_chk_checkF);
  init_symbol(&symbols[22u], "chk_cmpEOP", SYM_MODULE, &INST_chk_cmpEOP);
  init_symbol(&symbols[23u], "chk_cmpEOP_1", SYM_MODULE, &INST_chk_cmpEOP_1);
  init_symbol(&symbols[24u], "chk_cmpFire", SYM_MODULE, &INST_chk_cmpFire);
  init_symbol(&symbols[25u], "chk_cmpFire_1", SYM_MODULE, &INST_chk_cmpFire_1);
  init_symbol(&symbols[26u], "chk_cmpMatch", SYM_MODULE, &INST_chk_cmpMatch);
  init_symbol(&symbols[27u], "chk_cmpMatch_1", SYM_MODULE, &INST_chk_cmpMatch_1);
  init_symbol(&symbols[28u], "chk_incorrect", SYM_MODULE, &INST_chk_incorrect);
  init_symbol(&symbols[29u], "chk_maxLen", SYM_MODULE, &INST_chk_maxLen);
  init_symbol(&symbols[30u], "chk_mesgCnt", SYM_MODULE, &INST_chk_mesgCnt);
  init_symbol(&symbols[31u], "chk_minLen", SYM_MODULE, &INST_chk_minLen);
  init_symbol(&symbols[32u], "chk_wordCnt", SYM_MODULE, &INST_chk_wordCnt);
  init_symbol(&symbols[33u], "cycleCounter", SYM_MODULE, &INST_cycleCounter);
  init_symbol(&symbols[34u], "gen1_count", SYM_MODULE, &INST_gen1_count);
  init_symbol(&symbols[35u], "gen1_initV", SYM_MODULE, &INST_gen1_initV);
  init_symbol(&symbols[36u], "gen1_lfsr_r", SYM_MODULE, &INST_gen1_lfsr_r);
  init_symbol(&symbols[37u], "gen1_maxLen", SYM_MODULE, &INST_gen1_maxLen);
  init_symbol(&symbols[38u], "gen1_mesgLen", SYM_MODULE, &INST_gen1_mesgLen);
  init_symbol(&symbols[39u], "gen1_mesgOutF", SYM_MODULE, &INST_gen1_mesgOutF);
  init_symbol(&symbols[40u], "gen1_minLen", SYM_MODULE, &INST_gen1_minLen);
  init_symbol(&symbols[41u], "gen1_patternV", SYM_MODULE, &INST_gen1_patternV);
  init_symbol(&symbols[42u], "gen1_randomF", SYM_MODULE, &INST_gen1_randomF);
  init_symbol(&symbols[43u], "gen1_seedLFSR", SYM_MODULE, &INST_gen1_seedLFSR);
  init_symbol(&symbols[44u], "gen1_startLFSR", SYM_MODULE, &INST_gen1_startLFSR);
  init_symbol(&symbols[45u], "gen1_tmp", SYM_MODULE, &INST_gen1_tmp);
  init_symbol(&symbols[46u], "gen2_count", SYM_MODULE, &INST_gen2_count);
  init_symbol(&symbols[47u], "gen2_initV", SYM_MODULE, &INST_gen2_initV);
  init_symbol(&symbols[48u], "gen2_lfsr_r", SYM_MODULE, &INST_gen2_lfsr_r);
  init_symbol(&symbols[49u], "gen2_maxLen", SYM_MODULE, &INST_gen2_maxLen);
  init_symbol(&symbols[50u], "gen2_mesgLen", SYM_MODULE, &INST_gen2_mesgLen);
  init_symbol(&symbols[51u], "gen2_mesgOutF", SYM_MODULE, &INST_gen2_mesgOutF);
  init_symbol(&symbols[52u], "gen2_minLen", SYM_MODULE, &INST_gen2_minLen);
  init_symbol(&symbols[53u], "gen2_patternV", SYM_MODULE, &INST_gen2_patternV);
  init_symbol(&symbols[54u], "gen2_randomF", SYM_MODULE, &INST_gen2_randomF);
  init_symbol(&symbols[55u], "gen2_seedLFSR", SYM_MODULE, &INST_gen2_seedLFSR);
  init_symbol(&symbols[56u], "gen2_startLFSR", SYM_MODULE, &INST_gen2_startLFSR);
  init_symbol(&symbols[57u], "gen2_tmp", SYM_MODULE, &INST_gen2_tmp);
  init_symbol(&symbols[58u], "RL_chk_cmpEOP__dreg_update", SYM_RULE);
  init_symbol(&symbols[59u], "RL_chk_cmpFire__dreg_update", SYM_RULE);
  init_symbol(&symbols[60u], "RL_chk_cmpMatch__dreg_update", SYM_RULE);
  init_symbol(&symbols[61u], "RL_chk_compare", SYM_RULE);
  init_symbol(&symbols[62u], "RL_cycleCount", SYM_RULE);
  init_symbol(&symbols[63u], "RL_gen1_genMesgEOP", SYM_RULE);
  init_symbol(&symbols[64u], "RL_gen1_genMesgNotEOP", SYM_RULE);
  init_symbol(&symbols[65u], "RL_gen1_setMsgLen", SYM_RULE);
  init_symbol(&symbols[66u], "RL_gen1_setupLFSR", SYM_RULE);
  init_symbol(&symbols[67u], "RL_gen2_genMesgEOP", SYM_RULE);
  init_symbol(&symbols[68u], "RL_gen2_genMesgNotEOP", SYM_RULE);
  init_symbol(&symbols[69u], "RL_gen2_setMsgLen", SYM_RULE);
  init_symbol(&symbols[70u], "RL_gen2_setupLFSR", SYM_RULE);
  init_symbol(&symbols[71u], "RL_gobble", SYM_RULE);
  init_symbol(&symbols[72u], "RL_mkConnectionGetPut", SYM_RULE);
  init_symbol(&symbols[73u], "RL_mkConnectionGetPut_1", SYM_RULE);
  init_symbol(&symbols[74u], "RL_mkConnectionGetPut_2", SYM_RULE);
  init_symbol(&symbols[75u],
	      "WILL_FIRE_RL_chk_cmpEOP__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update,
	      1u);
  init_symbol(&symbols[76u],
	      "WILL_FIRE_RL_chk_cmpFire__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update,
	      1u);
  init_symbol(&symbols[77u],
	      "WILL_FIRE_RL_chk_cmpMatch__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update,
	      1u);
  init_symbol(&symbols[78u], "WILL_FIRE_RL_chk_compare", SYM_DEF, &DEF_WILL_FIRE_RL_chk_compare, 1u);
  init_symbol(&symbols[79u], "WILL_FIRE_RL_cycleCount", SYM_DEF, &DEF_WILL_FIRE_RL_cycleCount, 1u);
  init_symbol(&symbols[80u],
	      "WILL_FIRE_RL_gen1_genMesgEOP",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen1_genMesgEOP,
	      1u);
  init_symbol(&symbols[81u],
	      "WILL_FIRE_RL_gen1_genMesgNotEOP",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen1_genMesgNotEOP,
	      1u);
  init_symbol(&symbols[82u],
	      "WILL_FIRE_RL_gen1_setMsgLen",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen1_setMsgLen,
	      1u);
  init_symbol(&symbols[83u],
	      "WILL_FIRE_RL_gen1_setupLFSR",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen1_setupLFSR,
	      1u);
  init_symbol(&symbols[84u],
	      "WILL_FIRE_RL_gen2_genMesgEOP",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen2_genMesgEOP,
	      1u);
  init_symbol(&symbols[85u],
	      "WILL_FIRE_RL_gen2_genMesgNotEOP",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen2_genMesgNotEOP,
	      1u);
  init_symbol(&symbols[86u],
	      "WILL_FIRE_RL_gen2_setMsgLen",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen2_setMsgLen,
	      1u);
  init_symbol(&symbols[87u],
	      "WILL_FIRE_RL_gen2_setupLFSR",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_gen2_setupLFSR,
	      1u);
  init_symbol(&symbols[88u], "WILL_FIRE_RL_gobble", SYM_DEF, &DEF_WILL_FIRE_RL_gobble, 1u);
  init_symbol(&symbols[89u],
	      "WILL_FIRE_RL_mkConnectionGetPut",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut,
	      1u);
  init_symbol(&symbols[90u],
	      "WILL_FIRE_RL_mkConnectionGetPut_1",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_1,
	      1u);
  init_symbol(&symbols[91u],
	      "WILL_FIRE_RL_mkConnectionGetPut_2",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_mkConnectionGetPut_2,
	      1u);
  init_symbol(&symbols[92u], "x__h3818", SYM_DEF, &DEF_x__h3818, 9u);
  init_symbol(&symbols[93u], "x__h9403", SYM_DEF, &DEF_x__h9403, 9u);
}


/* Rule actions */

void MOD_mkFTop_dp705::RL_gen1_setupLFSR()
{
  INST_gen1_startLFSR.METH_write((tUInt8)1u);
  INST_gen1_seedLFSR.METH_write((tUInt8)0u);
  INST_gen1_lfsr_r.METH_write(1431655765u);
}

void MOD_mkFTop_dp705::RL_gen1_setMsgLen()
{
  tUInt8 DEF_NOT_gen1_lfsr_r_BITS_31_TO_23_EQ_0_AND_gen1_lf_ETC___d10;
  tUInt32 DEF_x__h2356;
  tUInt32 DEF_x__h2325;
  tUInt32 DEF_x__h2407;
  tUInt8 DEF_gen1_lfsr_r_BIT_0___h2438;
  tUInt32 DEF_p__h2203;
  tUInt32 DEF_gen1_lfsr_r_BITS_31_TO_1___h2461;
  tUInt32 DEF_y__h2335;
  tUInt32 DEF_y__h2366;
  tUInt32 DEF_gen1_lfsr_r__h2247;
  DEF_gen1_lfsr_r__h2247 = INST_gen1_lfsr_r.METH_read();
  DEF_y__h2366 = INST_gen1_maxLen.METH_read();
  DEF_y__h2335 = INST_gen1_minLen.METH_read();
  DEF_gen1_lfsr_r_BITS_31_TO_1___h2461 = (tUInt32)(DEF_gen1_lfsr_r__h2247 >> 1u);
  DEF_p__h2203 = (tUInt32)(DEF_gen1_lfsr_r__h2247 >> 23u);
  DEF_gen1_lfsr_r_BIT_0___h2438 = (tUInt8)((tUInt8)1u & DEF_gen1_lfsr_r__h2247);
  DEF_x__h2407 = DEF_gen1_lfsr_r_BIT_0___h2438 ? ((((((((tUInt32)((tUInt8)1u)) << 31u) | (((tUInt32)(DEF_gen1_lfsr_r__h2247 >> 8u)) << 7u)) | (((tUInt32)((tUInt8)1u & ~((tUInt8)((tUInt8)1u & (DEF_gen1_lfsr_r__h2247 >> 7u))))) << 6u)) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_gen1_lfsr_r__h2247 >> 6u)))) << 5u)) | (((tUInt32)((tUInt8)1u & ~((tUInt8)((tUInt8)1u & (DEF_gen1_lfsr_r__h2247 >> 5u))))) << 4u)) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_gen1_lfsr_r__h2247 >> 4u)))) << 3u)) | (tUInt32)((tUInt8)7u & ~((tUInt8)((tUInt8)7u & (DEF_gen1_lfsr_r__h2247 >> 1u)))) : (((tUInt32)((tUInt8)0u)) << 31u) | DEF_gen1_lfsr_r_BITS_31_TO_1___h2461;
  DEF_x__h2325 = DEF_p__h2203 < DEF_y__h2335 ? DEF_p__h2203 : DEF_y__h2335;
  DEF_x__h2356 = DEF_p__h2203 <= DEF_y__h2366 ? DEF_y__h2366 : DEF_p__h2203;
  DEF_NOT_gen1_lfsr_r_BITS_31_TO_23_EQ_0_AND_gen1_lf_ETC___d10 = !(DEF_p__h2203 == 0u) && DEF_p__h2203 < 256u;
  if (DEF_NOT_gen1_lfsr_r_BITS_31_TO_23_EQ_0_AND_gen1_lf_ETC___d10)
    INST_gen1_randomF.METH_enq(DEF_p__h2203);
  if (DEF_NOT_gen1_lfsr_r_BITS_31_TO_23_EQ_0_AND_gen1_lf_ETC___d10)
    INST_gen1_minLen.METH_write(DEF_x__h2325);
  if (DEF_NOT_gen1_lfsr_r_BITS_31_TO_23_EQ_0_AND_gen1_lf_ETC___d10)
    INST_gen1_maxLen.METH_write(DEF_x__h2356);
  INST_gen1_lfsr_r.METH_write(DEF_x__h2407);
}

void MOD_mkFTop_dp705::RL_gen1_genMesgNotEOP()
{
  tUInt32 DEF_x__h3810;
  tUInt32 DEF__4_PLUS_gen1_patternV_9_BITS_31_TO_24_1_2_CONCA_ETC___d50;
  tUInt64 DEF__0_CONCAT_gen1_patternV_9___d40;
  tUInt8 DEF_gen1_patternV_BITS_7_TO_0___h3257;
  tUInt8 DEF_gen1_patternV_BITS_15_TO_8___h3164;
  tUInt8 DEF_gen1_patternV_BITS_23_TO_16___h3071;
  tUInt8 DEF_gen1_patternV_BITS_31_TO_24___h2979;
  DEF_gen1_patternV__h3256 = INST_gen1_patternV.METH_read();
  DEF_x__h3818 = INST_gen1_count.METH_read();
  DEF_gen1_patternV_BITS_31_TO_24___h2979 = (tUInt8)(DEF_gen1_patternV__h3256 >> 24u);
  DEF_gen1_patternV_BITS_23_TO_16___h3071 = (tUInt8)((tUInt8)255u & (DEF_gen1_patternV__h3256 >> 16u));
  DEF_gen1_patternV_BITS_7_TO_0___h3257 = (tUInt8)((tUInt8)255u & DEF_gen1_patternV__h3256);
  DEF_gen1_patternV_BITS_15_TO_8___h3164 = (tUInt8)((tUInt8)255u & (DEF_gen1_patternV__h3256 >> 8u));
  DEF__0_CONCAT_gen1_patternV_9___d40 = 8589934591llu & ((((tUInt64)((tUInt8)0u)) << 32u) | (tUInt64)(DEF_gen1_patternV__h3256));
  DEF__4_PLUS_gen1_patternV_9_BITS_31_TO_24_1_2_CONCA_ETC___d50 = (((((tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen1_patternV_BITS_31_TO_24___h2979))) << 24u) | (((tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen1_patternV_BITS_23_TO_16___h3071))) << 16u)) | (((tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen1_patternV_BITS_15_TO_8___h3164))) << 8u)) | (tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen1_patternV_BITS_7_TO_0___h3257));
  DEF_x__h3810 = 511u & (DEF_x__h3818 + 1u);
  INST_gen1_mesgOutF.METH_enq(DEF__0_CONCAT_gen1_patternV_9___d40);
  INST_gen1_patternV.METH_write(DEF__4_PLUS_gen1_patternV_9_BITS_31_TO_24_1_2_CONCA_ETC___d50);
  INST_gen1_count.METH_write(DEF_x__h3810);
}

void MOD_mkFTop_dp705::RL_gen1_genMesgEOP()
{
  tUInt32 DEF__1_PLUS_gen1_initV_7_BITS_31_TO_24_8_9_CONCAT_1_ETC___d67;
  tUInt64 DEF__1_CONCAT_gen1_patternV_9___d56;
  tUInt8 DEF_gen1_initV_BITS_7_TO_0___h4990;
  tUInt8 DEF_gen1_initV_BITS_15_TO_8___h4897;
  tUInt8 DEF_gen1_initV_BITS_23_TO_16___h4804;
  tUInt8 DEF_gen1_initV_BITS_31_TO_24___h4712;
  tUInt32 DEF_x__h5577;
  tUInt32 DEF_gen1_initV__h4989;
  DEF_gen1_initV__h4989 = INST_gen1_initV.METH_read();
  DEF_gen1_patternV__h3256 = INST_gen1_patternV.METH_read();
  DEF_x__h5577 = INST_gen1_randomF.METH_first();
  DEF_gen1_initV_BITS_31_TO_24___h4712 = (tUInt8)(DEF_gen1_initV__h4989 >> 24u);
  DEF_gen1_initV_BITS_23_TO_16___h4804 = (tUInt8)((tUInt8)255u & (DEF_gen1_initV__h4989 >> 16u));
  DEF_gen1_initV_BITS_15_TO_8___h4897 = (tUInt8)((tUInt8)255u & (DEF_gen1_initV__h4989 >> 8u));
  DEF_gen1_initV_BITS_7_TO_0___h4990 = (tUInt8)((tUInt8)255u & DEF_gen1_initV__h4989);
  DEF__1_CONCAT_gen1_patternV_9___d56 = 8589934591llu & ((((tUInt64)((tUInt8)1u)) << 32u) | (tUInt64)(DEF_gen1_patternV__h3256));
  DEF__1_PLUS_gen1_initV_7_BITS_31_TO_24_8_9_CONCAT_1_ETC___d67 = (((((tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen1_initV_BITS_31_TO_24___h4712))) << 24u) | (((tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen1_initV_BITS_23_TO_16___h4804))) << 16u)) | (((tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen1_initV_BITS_15_TO_8___h4897))) << 8u)) | (tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen1_initV_BITS_7_TO_0___h4990));
  INST_gen1_mesgOutF.METH_enq(DEF__1_CONCAT_gen1_patternV_9___d56);
  INST_gen1_patternV.METH_write(DEF_gen1_initV__h4989);
  INST_gen1_initV.METH_write(DEF__1_PLUS_gen1_initV_7_BITS_31_TO_24_8_9_CONCAT_1_ETC___d67);
  INST_gen1_count.METH_write(0u);
  INST_gen1_randomF.METH_deq();
  INST_gen1_mesgLen.METH_write(DEF_x__h5577);
}

void MOD_mkFTop_dp705::RL_gen2_setupLFSR()
{
  INST_gen2_startLFSR.METH_write((tUInt8)1u);
  INST_gen2_seedLFSR.METH_write((tUInt8)0u);
  INST_gen2_lfsr_r.METH_write(1431655765u);
}

void MOD_mkFTop_dp705::RL_gen2_setMsgLen()
{
  tUInt8 DEF_NOT_gen2_lfsr_r_3_BITS_31_TO_23_4_EQ_0_5_6_AND_ETC___d78;
  tUInt32 DEF_x__h7910;
  tUInt32 DEF_x__h7941;
  tUInt32 DEF_x__h7992;
  tUInt8 DEF_gen2_lfsr_r_BIT_0___h8023;
  tUInt32 DEF_p__h7788;
  tUInt32 DEF_gen2_lfsr_r_BITS_31_TO_1___h8046;
  tUInt32 DEF_y__h7920;
  tUInt32 DEF_y__h7951;
  tUInt32 DEF_gen2_lfsr_r__h7832;
  DEF_gen2_lfsr_r__h7832 = INST_gen2_lfsr_r.METH_read();
  DEF_y__h7951 = INST_gen2_maxLen.METH_read();
  DEF_y__h7920 = INST_gen2_minLen.METH_read();
  DEF_gen2_lfsr_r_BITS_31_TO_1___h8046 = (tUInt32)(DEF_gen2_lfsr_r__h7832 >> 1u);
  DEF_p__h7788 = (tUInt32)(DEF_gen2_lfsr_r__h7832 >> 23u);
  DEF_gen2_lfsr_r_BIT_0___h8023 = (tUInt8)((tUInt8)1u & DEF_gen2_lfsr_r__h7832);
  DEF_x__h7992 = DEF_gen2_lfsr_r_BIT_0___h8023 ? ((((((((tUInt32)((tUInt8)1u)) << 31u) | (((tUInt32)(DEF_gen2_lfsr_r__h7832 >> 8u)) << 7u)) | (((tUInt32)((tUInt8)1u & ~((tUInt8)((tUInt8)1u & (DEF_gen2_lfsr_r__h7832 >> 7u))))) << 6u)) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_gen2_lfsr_r__h7832 >> 6u)))) << 5u)) | (((tUInt32)((tUInt8)1u & ~((tUInt8)((tUInt8)1u & (DEF_gen2_lfsr_r__h7832 >> 5u))))) << 4u)) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_gen2_lfsr_r__h7832 >> 4u)))) << 3u)) | (tUInt32)((tUInt8)7u & ~((tUInt8)((tUInt8)7u & (DEF_gen2_lfsr_r__h7832 >> 1u)))) : (((tUInt32)((tUInt8)0u)) << 31u) | DEF_gen2_lfsr_r_BITS_31_TO_1___h8046;
  DEF_x__h7941 = DEF_p__h7788 <= DEF_y__h7951 ? DEF_y__h7951 : DEF_p__h7788;
  DEF_x__h7910 = DEF_p__h7788 < DEF_y__h7920 ? DEF_p__h7788 : DEF_y__h7920;
  DEF_NOT_gen2_lfsr_r_3_BITS_31_TO_23_4_EQ_0_5_6_AND_ETC___d78 = !(DEF_p__h7788 == 0u) && DEF_p__h7788 < 256u;
  if (DEF_NOT_gen2_lfsr_r_3_BITS_31_TO_23_4_EQ_0_5_6_AND_ETC___d78)
    INST_gen2_randomF.METH_enq(DEF_p__h7788);
  if (DEF_NOT_gen2_lfsr_r_3_BITS_31_TO_23_4_EQ_0_5_6_AND_ETC___d78)
    INST_gen2_minLen.METH_write(DEF_x__h7910);
  if (DEF_NOT_gen2_lfsr_r_3_BITS_31_TO_23_4_EQ_0_5_6_AND_ETC___d78)
    INST_gen2_maxLen.METH_write(DEF_x__h7941);
  INST_gen2_lfsr_r.METH_write(DEF_x__h7992);
}

void MOD_mkFTop_dp705::RL_gen2_genMesgNotEOP()
{
  tUInt32 DEF_x__h9395;
  tUInt32 DEF__4_PLUS_gen2_patternV_07_BITS_31_TO_24_09_10_CO_ETC___d118;
  tUInt64 DEF__0_CONCAT_gen2_patternV_07___d108;
  tUInt8 DEF_gen2_patternV_BITS_7_TO_0___h8842;
  tUInt8 DEF_gen2_patternV_BITS_15_TO_8___h8749;
  tUInt8 DEF_gen2_patternV_BITS_23_TO_16___h8656;
  tUInt8 DEF_gen2_patternV_BITS_31_TO_24___h8564;
  DEF_gen2_patternV__h8841 = INST_gen2_patternV.METH_read();
  DEF_x__h9403 = INST_gen2_count.METH_read();
  DEF_gen2_patternV_BITS_31_TO_24___h8564 = (tUInt8)(DEF_gen2_patternV__h8841 >> 24u);
  DEF_gen2_patternV_BITS_23_TO_16___h8656 = (tUInt8)((tUInt8)255u & (DEF_gen2_patternV__h8841 >> 16u));
  DEF_gen2_patternV_BITS_7_TO_0___h8842 = (tUInt8)((tUInt8)255u & DEF_gen2_patternV__h8841);
  DEF_gen2_patternV_BITS_15_TO_8___h8749 = (tUInt8)((tUInt8)255u & (DEF_gen2_patternV__h8841 >> 8u));
  DEF__0_CONCAT_gen2_patternV_07___d108 = 8589934591llu & ((((tUInt64)((tUInt8)0u)) << 32u) | (tUInt64)(DEF_gen2_patternV__h8841));
  DEF__4_PLUS_gen2_patternV_07_BITS_31_TO_24_09_10_CO_ETC___d118 = (((((tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen2_patternV_BITS_31_TO_24___h8564))) << 24u) | (((tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen2_patternV_BITS_23_TO_16___h8656))) << 16u)) | (((tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen2_patternV_BITS_15_TO_8___h8749))) << 8u)) | (tUInt32)((tUInt8)255u & ((tUInt8)4u + DEF_gen2_patternV_BITS_7_TO_0___h8842));
  DEF_x__h9395 = 511u & (DEF_x__h9403 + 1u);
  INST_gen2_mesgOutF.METH_enq(DEF__0_CONCAT_gen2_patternV_07___d108);
  INST_gen2_patternV.METH_write(DEF__4_PLUS_gen2_patternV_07_BITS_31_TO_24_09_10_CO_ETC___d118);
  INST_gen2_count.METH_write(DEF_x__h9395);
}

void MOD_mkFTop_dp705::RL_gen2_genMesgEOP()
{
  tUInt32 DEF__1_PLUS_gen2_initV_25_BITS_31_TO_24_26_27_CONCA_ETC___d135;
  tUInt64 DEF__1_CONCAT_gen2_patternV_07___d124;
  tUInt8 DEF_gen2_initV_BITS_7_TO_0___h10575;
  tUInt8 DEF_gen2_initV_BITS_15_TO_8___h10482;
  tUInt8 DEF_gen2_initV_BITS_23_TO_16___h10389;
  tUInt8 DEF_gen2_initV_BITS_31_TO_24___h10297;
  tUInt32 DEF_x__h11162;
  tUInt32 DEF_gen2_initV__h10574;
  DEF_gen2_initV__h10574 = INST_gen2_initV.METH_read();
  DEF_gen2_patternV__h8841 = INST_gen2_patternV.METH_read();
  DEF_x__h11162 = INST_gen2_randomF.METH_first();
  DEF_gen2_initV_BITS_31_TO_24___h10297 = (tUInt8)(DEF_gen2_initV__h10574 >> 24u);
  DEF_gen2_initV_BITS_23_TO_16___h10389 = (tUInt8)((tUInt8)255u & (DEF_gen2_initV__h10574 >> 16u));
  DEF_gen2_initV_BITS_15_TO_8___h10482 = (tUInt8)((tUInt8)255u & (DEF_gen2_initV__h10574 >> 8u));
  DEF_gen2_initV_BITS_7_TO_0___h10575 = (tUInt8)((tUInt8)255u & DEF_gen2_initV__h10574);
  DEF__1_CONCAT_gen2_patternV_07___d124 = 8589934591llu & ((((tUInt64)((tUInt8)1u)) << 32u) | (tUInt64)(DEF_gen2_patternV__h8841));
  DEF__1_PLUS_gen2_initV_25_BITS_31_TO_24_26_27_CONCA_ETC___d135 = (((((tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen2_initV_BITS_31_TO_24___h10297))) << 24u) | (((tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen2_initV_BITS_23_TO_16___h10389))) << 16u)) | (((tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen2_initV_BITS_15_TO_8___h10482))) << 8u)) | (tUInt32)((tUInt8)255u & ((tUInt8)1u + DEF_gen2_initV_BITS_7_TO_0___h10575));
  INST_gen2_mesgOutF.METH_enq(DEF__1_CONCAT_gen2_patternV_07___d124);
  INST_gen2_patternV.METH_write(DEF_gen2_initV__h10574);
  INST_gen2_initV.METH_write(DEF__1_PLUS_gen2_initV_25_BITS_31_TO_24_26_27_CONCA_ETC___d135);
  INST_gen2_count.METH_write(0u);
  INST_gen2_randomF.METH_deq();
  INST_gen2_mesgLen.METH_write(DEF_x__h11162);
}

void MOD_mkFTop_dp705::RL_chk_cmpFire__dreg_update()
{
  tUInt8 DEF_chk_cmpFire_1_whas__37_AND_chk_cmpFire_1_wget__38___d139;
  DEF_chk_cmpFire_1_whas__37_AND_chk_cmpFire_1_wget__38___d139 = INST_chk_cmpFire_1.METH_whas() && INST_chk_cmpFire_1.METH_wget();
  INST_chk_cmpFire.METH_write(DEF_chk_cmpFire_1_whas__37_AND_chk_cmpFire_1_wget__38___d139);
}

void MOD_mkFTop_dp705::RL_chk_cmpEOP__dreg_update()
{
  tUInt8 DEF_chk_cmpEOP_1_whas__40_AND_chk_cmpEOP_1_wget__41___d142;
  DEF_chk_cmpEOP_1_whas__40_AND_chk_cmpEOP_1_wget__41___d142 = INST_chk_cmpEOP_1.METH_whas() && INST_chk_cmpEOP_1.METH_wget();
  INST_chk_cmpEOP.METH_write(DEF_chk_cmpEOP_1_whas__40_AND_chk_cmpEOP_1_wget__41___d142);
}

void MOD_mkFTop_dp705::RL_chk_cmpMatch__dreg_update()
{
  tUInt8 DEF_chk_cmpMatch_1_whas__43_AND_chk_cmpMatch_1_wge_ETC___d145;
  DEF_chk_cmpMatch_1_whas__43_AND_chk_cmpMatch_1_wge_ETC___d145 = INST_chk_cmpMatch_1.METH_whas() && INST_chk_cmpMatch_1.METH_wget();
  INST_chk_cmpMatch.METH_write(DEF_chk_cmpMatch_1_whas__43_AND_chk_cmpMatch_1_wge_ETC___d145);
}

void MOD_mkFTop_dp705::RL_chk_compare()
{
  tUInt8 DEF_x__h12902;
  tUInt8 DEF_x__h13111;
  tUInt8 DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d173;
  tUInt8 DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d168;
  tUInt8 DEF_x__h12794;
  tUInt8 DEF_x__h12930;
  tUInt8 DEF_x__h12969;
  tUInt32 DEF_chk_buffF_first__49_BITS_31_TO_0___d199;
  tUInt32 DEF_chk_checkF_first__50_BITS_31_TO_0___d200;
  tUInt8 DEF_x__h13115;
  tUInt8 DEF_y__h12948;
  tUInt8 DEF_y__h12980;
  tUInt8 DEF_x__h13004;
  tUInt8 DEF_x__h12979;
  tUInt64 DEF_chk_buffF_first____d193;
  tUInt64 DEF_chk_checkF_first____d194;
  tUInt8 DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198;
  tUInt8 DEF_chk_checkF_first__50_BIT_32___d196;
  tUInt8 DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d197;
  tUInt8 DEF_chk_mesgCnt_60_REM_50___d171;
  tUInt8 DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d170;
  DEF_chk_checkF_first____d194 = INST_chk_checkF.METH_first();
  DEF_chk_checkF_first__50_BIT_32___d196 = (tUInt8)(DEF_chk_checkF_first____d194 >> 32u);
  DEF_chk_buffF_first____d193 = INST_chk_buffF.METH_first();
  DEF_x__h12979 = INST_chk_wordCnt.METH_read();
  DEF_x__h13004 = INST_chk_mesgCnt.METH_read();
  DEF_chk_mesgCnt_60_REM_50___d171 = (tUInt8)255u & (DEF_x__h13004 % (tUInt8)50u);
  DEF_y__h12980 = INST_chk_maxLen.METH_read();
  DEF_y__h12948 = INST_chk_minLen.METH_read();
  DEF_x__h13115 = INST_chk_incorrect.METH_read();
  DEF_chk_checkF_first__50_BITS_31_TO_0___d200 = (tUInt32)(DEF_chk_checkF_first____d194);
  DEF_chk_buffF_first__49_BITS_31_TO_0___d199 = (tUInt32)(DEF_chk_buffF_first____d193);
  DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d197 = DEF_chk_checkF_first__50_BITS_31_TO_0___d200 == DEF_chk_buffF_first__49_BITS_31_TO_0___d199;
  DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198 = DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d197 && DEF_chk_checkF_first__50_BIT_32___d196;
  DEF_x__h12969 = DEF_x__h12979 <= DEF_y__h12980 ? DEF_y__h12980 : DEF_x__h12979;
  DEF_x__h12930 = DEF_x__h12979 < DEF_y__h12948 ? DEF_x__h12979 : DEF_y__h12948;
  DEF_x__h12794 = DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198 ? (tUInt8)1u : (DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d197 ? (tUInt8)255u & (DEF_x__h12979 + (tUInt8)1u) : DEF_x__h12979);
  DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d168 = !DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d197;
  DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d170 = DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d168 || !DEF_chk_checkF_first__50_BIT_32___d196;
  DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d173 = DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d170 && DEF_chk_mesgCnt_60_REM_50___d171 == (tUInt8)1u;
  DEF_x__h13111 = (tUInt8)255u & (DEF_x__h13115 + (tUInt8)1u);
  DEF_x__h12902 = (tUInt8)255u & (DEF_x__h13004 + (tUInt8)1u);
  INST_chk_cmpFire_1.METH_wset((tUInt8)1u);
  INST_chk_buff.METH_write(DEF_chk_buffF_first____d193);
  INST_chk_check.METH_write(DEF_chk_checkF_first____d194);
  INST_chk_buffF.METH_deq();
  INST_chk_checkF.METH_deq();
  INST_chk_cmpMatch_1.METH_wset(DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d197);
  INST_chk_cmpEOP_1.METH_wset(DEF_chk_checkF_first__50_BIT_32___d196);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198)
      dollar_display(sim_hdl,
		     this,
		     "s,8,8,32",
		     &__str_literal_1,
		     DEF_x__h13004,
		     DEF_x__h12979,
		     DEF_chk_buffF_first__49_BITS_31_TO_0___d199);
  INST_chk_wordCnt.METH_write(DEF_x__h12794);
  if (DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198)
    INST_chk_mesgCnt.METH_write(DEF_x__h12902);
  if (DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198)
    INST_chk_minLen.METH_write(DEF_x__h12930);
  if (DEF_chk_checkF_first__50_BITS_31_TO_0_51_EQ_chk_bu_ETC___d198)
    INST_chk_maxLen.METH_write(DEF_x__h12969);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d173)
      dollar_display(sim_hdl, this, "s,8,8", &__str_literal_2, DEF_y__h12980, DEF_y__h12948);
    if (DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d168)
      dollar_display(sim_hdl,
		     this,
		     "s,32,32",
		     &__str_literal_3,
		     DEF_chk_buffF_first__49_BITS_31_TO_0___d199,
		     DEF_chk_checkF_first__50_BITS_31_TO_0___d200);
  }
  if (DEF_NOT_chk_checkF_first__50_BITS_31_TO_0_51_EQ_ch_ETC___d168)
    INST_chk_incorrect.METH_write(DEF_x__h13111);
}

void MOD_mkFTop_dp705::RL_cycleCount()
{
  tUInt32 DEF_x__h13268;
  DEF__read__h13235 = INST_cycleCounter.METH_read();
  DEF_x__h13268 = 65535u & (DEF__read__h13235 + 1u);
  INST_cycleCounter.METH_write(DEF_x__h13268);
}

void MOD_mkFTop_dp705::RL_gobble()
{
  tUInt8 DEF_cycleCounter_76_EQ_15000___d178;
  DEF__read__h13235 = INST_cycleCounter.METH_read();
  DEF_cycleCounter_76_EQ_15000___d178 = DEF__read__h13235 == 15000u;
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_cycleCounter_76_EQ_15000___d178)
      dollar_finish(sim_hdl, "32", 1u);
}

void MOD_mkFTop_dp705::RL_mkConnectionGetPut()
{
  tUInt64 DEF_gen1_mesgOutF_first____d191;
  DEF_gen1_mesgOutF_first____d191 = INST_gen1_mesgOutF.METH_first();
  INST_gen1_mesgOutF.METH_deq();
  INST_buf1.METH_sink_put(DEF_gen1_mesgOutF_first____d191);
}

void MOD_mkFTop_dp705::RL_mkConnectionGetPut_1()
{
  tUInt64 DEF_buf1_src_get___d195;
  tUInt64 DEF_AVMeth_buf1_src_get;
  DEF_AVMeth_buf1_src_get = INST_buf1.METH_src_get();
  DEF_buf1_src_get___d195 = DEF_AVMeth_buf1_src_get;
  INST_chk_buffF.METH_enq(DEF_buf1_src_get___d195);
}

void MOD_mkFTop_dp705::RL_mkConnectionGetPut_2()
{
  tUInt64 DEF_gen2_mesgOutF_first____d192;
  DEF_gen2_mesgOutF_first____d192 = INST_gen2_mesgOutF.METH_first();
  INST_gen2_mesgOutF.METH_deq();
  INST_chk_checkF.METH_enq(DEF_gen2_mesgOutF_first____d192);
}


/* Methods */


/* Reset routines */

void MOD_mkFTop_dp705::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_gen2_tmp.reset_RST(ARG_rst_in);
  INST_gen2_startLFSR.reset_RST(ARG_rst_in);
  INST_gen2_seedLFSR.reset_RST(ARG_rst_in);
  INST_gen2_randomF.reset_RST(ARG_rst_in);
  INST_gen2_patternV.reset_RST(ARG_rst_in);
  INST_gen2_minLen.reset_RST(ARG_rst_in);
  INST_gen2_mesgOutF.reset_RST(ARG_rst_in);
  INST_gen2_mesgLen.reset_RST(ARG_rst_in);
  INST_gen2_maxLen.reset_RST(ARG_rst_in);
  INST_gen2_lfsr_r.reset_RST(ARG_rst_in);
  INST_gen2_initV.reset_RST(ARG_rst_in);
  INST_gen2_count.reset_RST(ARG_rst_in);
  INST_gen1_tmp.reset_RST(ARG_rst_in);
  INST_gen1_startLFSR.reset_RST(ARG_rst_in);
  INST_gen1_seedLFSR.reset_RST(ARG_rst_in);
  INST_gen1_randomF.reset_RST(ARG_rst_in);
  INST_gen1_patternV.reset_RST(ARG_rst_in);
  INST_gen1_minLen.reset_RST(ARG_rst_in);
  INST_gen1_mesgOutF.reset_RST(ARG_rst_in);
  INST_gen1_mesgLen.reset_RST(ARG_rst_in);
  INST_gen1_maxLen.reset_RST(ARG_rst_in);
  INST_gen1_lfsr_r.reset_RST(ARG_rst_in);
  INST_gen1_initV.reset_RST(ARG_rst_in);
  INST_gen1_count.reset_RST(ARG_rst_in);
  INST_cycleCounter.reset_RST(ARG_rst_in);
  INST_chk_wordCnt.reset_RST(ARG_rst_in);
  INST_chk_minLen.reset_RST(ARG_rst_in);
  INST_chk_mesgCnt.reset_RST(ARG_rst_in);
  INST_chk_maxLen.reset_RST(ARG_rst_in);
  INST_chk_incorrect.reset_RST(ARG_rst_in);
  INST_chk_cmpMatch.reset_RST(ARG_rst_in);
  INST_chk_cmpFire.reset_RST(ARG_rst_in);
  INST_chk_cmpEOP.reset_RST(ARG_rst_in);
  INST_chk_checkF.reset_RST(ARG_rst_in);
  INST_chk_check.reset_RST(ARG_rst_in);
  INST_chk_buffF.reset_RST(ARG_rst_in);
  INST_chk_buff.reset_RST(ARG_rst_in);
  INST_buf1.reset_RST_N(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkFTop_dp705::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkFTop_dp705::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_buf1.dump_state(indent + 2u);
  INST_chk_buff.dump_state(indent + 2u);
  INST_chk_buffF.dump_state(indent + 2u);
  INST_chk_check.dump_state(indent + 2u);
  INST_chk_checkF.dump_state(indent + 2u);
  INST_chk_cmpEOP.dump_state(indent + 2u);
  INST_chk_cmpEOP_1.dump_state(indent + 2u);
  INST_chk_cmpFire.dump_state(indent + 2u);
  INST_chk_cmpFire_1.dump_state(indent + 2u);
  INST_chk_cmpMatch.dump_state(indent + 2u);
  INST_chk_cmpMatch_1.dump_state(indent + 2u);
  INST_chk_incorrect.dump_state(indent + 2u);
  INST_chk_maxLen.dump_state(indent + 2u);
  INST_chk_mesgCnt.dump_state(indent + 2u);
  INST_chk_minLen.dump_state(indent + 2u);
  INST_chk_wordCnt.dump_state(indent + 2u);
  INST_cycleCounter.dump_state(indent + 2u);
  INST_gen1_count.dump_state(indent + 2u);
  INST_gen1_initV.dump_state(indent + 2u);
  INST_gen1_lfsr_r.dump_state(indent + 2u);
  INST_gen1_maxLen.dump_state(indent + 2u);
  INST_gen1_mesgLen.dump_state(indent + 2u);
  INST_gen1_mesgOutF.dump_state(indent + 2u);
  INST_gen1_minLen.dump_state(indent + 2u);
  INST_gen1_patternV.dump_state(indent + 2u);
  INST_gen1_randomF.dump_state(indent + 2u);
  INST_gen1_seedLFSR.dump_state(indent + 2u);
  INST_gen1_startLFSR.dump_state(indent + 2u);
  INST_gen1_tmp.dump_state(indent + 2u);
  INST_gen2_count.dump_state(indent + 2u);
  INST_gen2_initV.dump_state(indent + 2u);
  INST_gen2_lfsr_r.dump_state(indent + 2u);
  INST_gen2_maxLen.dump_state(indent + 2u);
  INST_gen2_mesgLen.dump_state(indent + 2u);
  INST_gen2_mesgOutF.dump_state(indent + 2u);
  INST_gen2_minLen.dump_state(indent + 2u);
  INST_gen2_patternV.dump_state(indent + 2u);
  INST_gen2_randomF.dump_state(indent + 2u);
  INST_gen2_seedLFSR.dump_state(indent + 2u);
  INST_gen2_startLFSR.dump_state(indent + 2u);
  INST_gen2_tmp.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkFTop_dp705::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 80u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_chk_cmpEOP__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_chk_cmpFire__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_chk_cmpMatch__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_chk_compare", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_cycleCount", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen1_genMesgEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen1_genMesgNotEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen1_setMsgLen", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen1_setupLFSR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen2_genMesgEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen2_genMesgNotEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen2_setMsgLen", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gen2_setupLFSR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_gobble", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_mkConnectionGetPut_2", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_chk_cmpEOP__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_chk_cmpFire__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_chk_cmpMatch__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_chk_compare", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_cycleCount", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen1_genMesgEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen1_genMesgNotEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen1_setMsgLen", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen1_setupLFSR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen2_genMesgEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen2_genMesgNotEOP", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen2_setMsgLen", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gen2_setupLFSR", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_gobble", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_1", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_mkConnectionGetPut_2", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h13235", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gen1_patternV__h3256", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "gen2_patternV__h8841", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3818", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h9403", 9u);
  num = INST_chk_buff.dump_VCD_defs(num);
  num = INST_chk_buffF.dump_VCD_defs(num);
  num = INST_chk_check.dump_VCD_defs(num);
  num = INST_chk_checkF.dump_VCD_defs(num);
  num = INST_chk_cmpEOP.dump_VCD_defs(num);
  num = INST_chk_cmpEOP_1.dump_VCD_defs(num);
  num = INST_chk_cmpFire.dump_VCD_defs(num);
  num = INST_chk_cmpFire_1.dump_VCD_defs(num);
  num = INST_chk_cmpMatch.dump_VCD_defs(num);
  num = INST_chk_cmpMatch_1.dump_VCD_defs(num);
  num = INST_chk_incorrect.dump_VCD_defs(num);
  num = INST_chk_maxLen.dump_VCD_defs(num);
  num = INST_chk_mesgCnt.dump_VCD_defs(num);
  num = INST_chk_minLen.dump_VCD_defs(num);
  num = INST_chk_wordCnt.dump_VCD_defs(num);
  num = INST_cycleCounter.dump_VCD_defs(num);
  num = INST_gen1_count.dump_VCD_defs(num);
  num = INST_gen1_initV.dump_VCD_defs(num);
  num = INST_gen1_lfsr_r.dump_VCD_defs(num);
  num = INST_gen1_maxLen.dump_VCD_defs(num);
  num = INST_gen1_mesgLen.dump_VCD_defs(num);
  num = INST_gen1_mesgOutF.dump_VCD_defs(num);
  num = INST_gen1_minLen.dump_VCD_defs(num);
  num = INST_gen1_patternV.dump_VCD_defs(num);
  num = INST_gen1_randomF.dump_VCD_defs(num);
  num = INST_gen1_seedLFSR.dump_VCD_defs(num);
  num = INST_gen1_startLFSR.dump_VCD_defs(num);
  num = INST_gen1_tmp.dump_VCD_defs(num);
  num = INST_gen2_count.dump_VCD_defs(num);
  num = INST_gen2_initV.dump_VCD_defs(num);
  num = INST_gen2_lfsr_r.dump_VCD_defs(num);
  num = INST_gen2_maxLen.dump_VCD_defs(num);
  num = INST_gen2_mesgLen.dump_VCD_defs(num);
  num = INST_gen2_mesgOutF.dump_VCD_defs(num);
  num = INST_gen2_minLen.dump_VCD_defs(num);
  num = INST_gen2_patternV.dump_VCD_defs(num);
  num = INST_gen2_randomF.dump_VCD_defs(num);
  num = INST_gen2_seedLFSR.dump_VCD_defs(num);
  num = INST_gen2_startLFSR.dump_VCD_defs(num);
  num = INST_gen2_tmp.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_buf1.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkFTop_dp705::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkFTop_dp705 &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkFTop_dp705::vcd_defs(tVCDDumpType dt, MOD_mkFTop_dp705 &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 9u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update) != DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update = DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update) != DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update = DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update) != DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update = DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_chk_compare) != DEF_CAN_FIRE_RL_chk_compare)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_chk_compare, 1u);
	backing.DEF_CAN_FIRE_RL_chk_compare = DEF_CAN_FIRE_RL_chk_compare;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_cycleCount) != DEF_CAN_FIRE_RL_cycleCount)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_cycleCount, 1u);
	backing.DEF_CAN_FIRE_RL_cycleCount = DEF_CAN_FIRE_RL_cycleCount;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen1_genMesgEOP) != DEF_CAN_FIRE_RL_gen1_genMesgEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen1_genMesgEOP, 1u);
	backing.DEF_CAN_FIRE_RL_gen1_genMesgEOP = DEF_CAN_FIRE_RL_gen1_genMesgEOP;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen1_genMesgNotEOP) != DEF_CAN_FIRE_RL_gen1_genMesgNotEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen1_genMesgNotEOP, 1u);
	backing.DEF_CAN_FIRE_RL_gen1_genMesgNotEOP = DEF_CAN_FIRE_RL_gen1_genMesgNotEOP;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen1_setMsgLen) != DEF_CAN_FIRE_RL_gen1_setMsgLen)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen1_setMsgLen, 1u);
	backing.DEF_CAN_FIRE_RL_gen1_setMsgLen = DEF_CAN_FIRE_RL_gen1_setMsgLen;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen1_setupLFSR) != DEF_CAN_FIRE_RL_gen1_setupLFSR)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen1_setupLFSR, 1u);
	backing.DEF_CAN_FIRE_RL_gen1_setupLFSR = DEF_CAN_FIRE_RL_gen1_setupLFSR;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen2_genMesgEOP) != DEF_CAN_FIRE_RL_gen2_genMesgEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen2_genMesgEOP, 1u);
	backing.DEF_CAN_FIRE_RL_gen2_genMesgEOP = DEF_CAN_FIRE_RL_gen2_genMesgEOP;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen2_genMesgNotEOP) != DEF_CAN_FIRE_RL_gen2_genMesgNotEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen2_genMesgNotEOP, 1u);
	backing.DEF_CAN_FIRE_RL_gen2_genMesgNotEOP = DEF_CAN_FIRE_RL_gen2_genMesgNotEOP;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen2_setMsgLen) != DEF_CAN_FIRE_RL_gen2_setMsgLen)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen2_setMsgLen, 1u);
	backing.DEF_CAN_FIRE_RL_gen2_setMsgLen = DEF_CAN_FIRE_RL_gen2_setMsgLen;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gen2_setupLFSR) != DEF_CAN_FIRE_RL_gen2_setupLFSR)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gen2_setupLFSR, 1u);
	backing.DEF_CAN_FIRE_RL_gen2_setupLFSR = DEF_CAN_FIRE_RL_gen2_setupLFSR;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_gobble) != DEF_CAN_FIRE_RL_gobble)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_gobble, 1u);
	backing.DEF_CAN_FIRE_RL_gobble = DEF_CAN_FIRE_RL_gobble;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut) != DEF_CAN_FIRE_RL_mkConnectionGetPut)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut = DEF_CAN_FIRE_RL_mkConnectionGetPut;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1) != DEF_CAN_FIRE_RL_mkConnectionGetPut_1)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_1, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2) != DEF_CAN_FIRE_RL_mkConnectionGetPut_2)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_mkConnectionGetPut_2, 1u);
	backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2 = DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update) != DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update = DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update) != DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update = DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update) != DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update = DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_chk_compare) != DEF_WILL_FIRE_RL_chk_compare)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_chk_compare, 1u);
	backing.DEF_WILL_FIRE_RL_chk_compare = DEF_WILL_FIRE_RL_chk_compare;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_cycleCount) != DEF_WILL_FIRE_RL_cycleCount)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_cycleCount, 1u);
	backing.DEF_WILL_FIRE_RL_cycleCount = DEF_WILL_FIRE_RL_cycleCount;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen1_genMesgEOP) != DEF_WILL_FIRE_RL_gen1_genMesgEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen1_genMesgEOP, 1u);
	backing.DEF_WILL_FIRE_RL_gen1_genMesgEOP = DEF_WILL_FIRE_RL_gen1_genMesgEOP;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen1_genMesgNotEOP) != DEF_WILL_FIRE_RL_gen1_genMesgNotEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen1_genMesgNotEOP, 1u);
	backing.DEF_WILL_FIRE_RL_gen1_genMesgNotEOP = DEF_WILL_FIRE_RL_gen1_genMesgNotEOP;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen1_setMsgLen) != DEF_WILL_FIRE_RL_gen1_setMsgLen)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen1_setMsgLen, 1u);
	backing.DEF_WILL_FIRE_RL_gen1_setMsgLen = DEF_WILL_FIRE_RL_gen1_setMsgLen;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen1_setupLFSR) != DEF_WILL_FIRE_RL_gen1_setupLFSR)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen1_setupLFSR, 1u);
	backing.DEF_WILL_FIRE_RL_gen1_setupLFSR = DEF_WILL_FIRE_RL_gen1_setupLFSR;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen2_genMesgEOP) != DEF_WILL_FIRE_RL_gen2_genMesgEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen2_genMesgEOP, 1u);
	backing.DEF_WILL_FIRE_RL_gen2_genMesgEOP = DEF_WILL_FIRE_RL_gen2_genMesgEOP;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen2_genMesgNotEOP) != DEF_WILL_FIRE_RL_gen2_genMesgNotEOP)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen2_genMesgNotEOP, 1u);
	backing.DEF_WILL_FIRE_RL_gen2_genMesgNotEOP = DEF_WILL_FIRE_RL_gen2_genMesgNotEOP;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen2_setMsgLen) != DEF_WILL_FIRE_RL_gen2_setMsgLen)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen2_setMsgLen, 1u);
	backing.DEF_WILL_FIRE_RL_gen2_setMsgLen = DEF_WILL_FIRE_RL_gen2_setMsgLen;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gen2_setupLFSR) != DEF_WILL_FIRE_RL_gen2_setupLFSR)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gen2_setupLFSR, 1u);
	backing.DEF_WILL_FIRE_RL_gen2_setupLFSR = DEF_WILL_FIRE_RL_gen2_setupLFSR;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_gobble) != DEF_WILL_FIRE_RL_gobble)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_gobble, 1u);
	backing.DEF_WILL_FIRE_RL_gobble = DEF_WILL_FIRE_RL_gobble;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut) != DEF_WILL_FIRE_RL_mkConnectionGetPut)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_WILL_FIRE_RL_mkConnectionGetPut;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1) != DEF_WILL_FIRE_RL_mkConnectionGetPut_1)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_1, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2) != DEF_WILL_FIRE_RL_mkConnectionGetPut_2)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_mkConnectionGetPut_2, 1u);
	backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2 = DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
      }
      ++num;
      if ((backing.DEF__read__h13235) != DEF__read__h13235)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h13235, 16u);
	backing.DEF__read__h13235 = DEF__read__h13235;
      }
      ++num;
      if ((backing.DEF_gen1_patternV__h3256) != DEF_gen1_patternV__h3256)
      {
	vcd_write_val(sim_hdl, num, DEF_gen1_patternV__h3256, 32u);
	backing.DEF_gen1_patternV__h3256 = DEF_gen1_patternV__h3256;
      }
      ++num;
      if ((backing.DEF_gen2_patternV__h8841) != DEF_gen2_patternV__h8841)
      {
	vcd_write_val(sim_hdl, num, DEF_gen2_patternV__h8841, 32u);
	backing.DEF_gen2_patternV__h8841 = DEF_gen2_patternV__h8841;
      }
      ++num;
      if ((backing.DEF_x__h3818) != DEF_x__h3818)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3818, 9u);
	backing.DEF_x__h3818 = DEF_x__h3818;
      }
      ++num;
      if ((backing.DEF_x__h9403) != DEF_x__h9403)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h9403, 9u);
	backing.DEF_x__h9403 = DEF_x__h9403;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update = DEF_CAN_FIRE_RL_chk_cmpEOP__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update = DEF_CAN_FIRE_RL_chk_cmpFire__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update = DEF_CAN_FIRE_RL_chk_cmpMatch__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_chk_compare, 1u);
      backing.DEF_CAN_FIRE_RL_chk_compare = DEF_CAN_FIRE_RL_chk_compare;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_cycleCount, 1u);
      backing.DEF_CAN_FIRE_RL_cycleCount = DEF_CAN_FIRE_RL_cycleCount;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen1_genMesgEOP, 1u);
      backing.DEF_CAN_FIRE_RL_gen1_genMesgEOP = DEF_CAN_FIRE_RL_gen1_genMesgEOP;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen1_genMesgNotEOP, 1u);
      backing.DEF_CAN_FIRE_RL_gen1_genMesgNotEOP = DEF_CAN_FIRE_RL_gen1_genMesgNotEOP;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen1_setMsgLen, 1u);
      backing.DEF_CAN_FIRE_RL_gen1_setMsgLen = DEF_CAN_FIRE_RL_gen1_setMsgLen;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen1_setupLFSR, 1u);
      backing.DEF_CAN_FIRE_RL_gen1_setupLFSR = DEF_CAN_FIRE_RL_gen1_setupLFSR;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen2_genMesgEOP, 1u);
      backing.DEF_CAN_FIRE_RL_gen2_genMesgEOP = DEF_CAN_FIRE_RL_gen2_genMesgEOP;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen2_genMesgNotEOP, 1u);
      backing.DEF_CAN_FIRE_RL_gen2_genMesgNotEOP = DEF_CAN_FIRE_RL_gen2_genMesgNotEOP;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen2_setMsgLen, 1u);
      backing.DEF_CAN_FIRE_RL_gen2_setMsgLen = DEF_CAN_FIRE_RL_gen2_setMsgLen;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gen2_setupLFSR, 1u);
      backing.DEF_CAN_FIRE_RL_gen2_setupLFSR = DEF_CAN_FIRE_RL_gen2_setupLFSR;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_gobble, 1u);
      backing.DEF_CAN_FIRE_RL_gobble = DEF_CAN_FIRE_RL_gobble;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut = DEF_CAN_FIRE_RL_mkConnectionGetPut;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_1, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_mkConnectionGetPut_2, 1u);
      backing.DEF_CAN_FIRE_RL_mkConnectionGetPut_2 = DEF_CAN_FIRE_RL_mkConnectionGetPut_2;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update = DEF_WILL_FIRE_RL_chk_cmpEOP__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update = DEF_WILL_FIRE_RL_chk_cmpFire__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update = DEF_WILL_FIRE_RL_chk_cmpMatch__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_chk_compare, 1u);
      backing.DEF_WILL_FIRE_RL_chk_compare = DEF_WILL_FIRE_RL_chk_compare;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_cycleCount, 1u);
      backing.DEF_WILL_FIRE_RL_cycleCount = DEF_WILL_FIRE_RL_cycleCount;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen1_genMesgEOP, 1u);
      backing.DEF_WILL_FIRE_RL_gen1_genMesgEOP = DEF_WILL_FIRE_RL_gen1_genMesgEOP;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen1_genMesgNotEOP, 1u);
      backing.DEF_WILL_FIRE_RL_gen1_genMesgNotEOP = DEF_WILL_FIRE_RL_gen1_genMesgNotEOP;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen1_setMsgLen, 1u);
      backing.DEF_WILL_FIRE_RL_gen1_setMsgLen = DEF_WILL_FIRE_RL_gen1_setMsgLen;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen1_setupLFSR, 1u);
      backing.DEF_WILL_FIRE_RL_gen1_setupLFSR = DEF_WILL_FIRE_RL_gen1_setupLFSR;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen2_genMesgEOP, 1u);
      backing.DEF_WILL_FIRE_RL_gen2_genMesgEOP = DEF_WILL_FIRE_RL_gen2_genMesgEOP;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen2_genMesgNotEOP, 1u);
      backing.DEF_WILL_FIRE_RL_gen2_genMesgNotEOP = DEF_WILL_FIRE_RL_gen2_genMesgNotEOP;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen2_setMsgLen, 1u);
      backing.DEF_WILL_FIRE_RL_gen2_setMsgLen = DEF_WILL_FIRE_RL_gen2_setMsgLen;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gen2_setupLFSR, 1u);
      backing.DEF_WILL_FIRE_RL_gen2_setupLFSR = DEF_WILL_FIRE_RL_gen2_setupLFSR;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_gobble, 1u);
      backing.DEF_WILL_FIRE_RL_gobble = DEF_WILL_FIRE_RL_gobble;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_WILL_FIRE_RL_mkConnectionGetPut;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_1, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_mkConnectionGetPut_2, 1u);
      backing.DEF_WILL_FIRE_RL_mkConnectionGetPut_2 = DEF_WILL_FIRE_RL_mkConnectionGetPut_2;
      vcd_write_val(sim_hdl, num++, DEF__read__h13235, 16u);
      backing.DEF__read__h13235 = DEF__read__h13235;
      vcd_write_val(sim_hdl, num++, DEF_gen1_patternV__h3256, 32u);
      backing.DEF_gen1_patternV__h3256 = DEF_gen1_patternV__h3256;
      vcd_write_val(sim_hdl, num++, DEF_gen2_patternV__h8841, 32u);
      backing.DEF_gen2_patternV__h8841 = DEF_gen2_patternV__h8841;
      vcd_write_val(sim_hdl, num++, DEF_x__h3818, 9u);
      backing.DEF_x__h3818 = DEF_x__h3818;
      vcd_write_val(sim_hdl, num++, DEF_x__h9403, 9u);
      backing.DEF_x__h9403 = DEF_x__h9403;
    }
}

void MOD_mkFTop_dp705::vcd_prims(tVCDDumpType dt, MOD_mkFTop_dp705 &backing)
{
  INST_chk_buff.dump_VCD(dt, backing.INST_chk_buff);
  INST_chk_buffF.dump_VCD(dt, backing.INST_chk_buffF);
  INST_chk_check.dump_VCD(dt, backing.INST_chk_check);
  INST_chk_checkF.dump_VCD(dt, backing.INST_chk_checkF);
  INST_chk_cmpEOP.dump_VCD(dt, backing.INST_chk_cmpEOP);
  INST_chk_cmpEOP_1.dump_VCD(dt, backing.INST_chk_cmpEOP_1);
  INST_chk_cmpFire.dump_VCD(dt, backing.INST_chk_cmpFire);
  INST_chk_cmpFire_1.dump_VCD(dt, backing.INST_chk_cmpFire_1);
  INST_chk_cmpMatch.dump_VCD(dt, backing.INST_chk_cmpMatch);
  INST_chk_cmpMatch_1.dump_VCD(dt, backing.INST_chk_cmpMatch_1);
  INST_chk_incorrect.dump_VCD(dt, backing.INST_chk_incorrect);
  INST_chk_maxLen.dump_VCD(dt, backing.INST_chk_maxLen);
  INST_chk_mesgCnt.dump_VCD(dt, backing.INST_chk_mesgCnt);
  INST_chk_minLen.dump_VCD(dt, backing.INST_chk_minLen);
  INST_chk_wordCnt.dump_VCD(dt, backing.INST_chk_wordCnt);
  INST_cycleCounter.dump_VCD(dt, backing.INST_cycleCounter);
  INST_gen1_count.dump_VCD(dt, backing.INST_gen1_count);
  INST_gen1_initV.dump_VCD(dt, backing.INST_gen1_initV);
  INST_gen1_lfsr_r.dump_VCD(dt, backing.INST_gen1_lfsr_r);
  INST_gen1_maxLen.dump_VCD(dt, backing.INST_gen1_maxLen);
  INST_gen1_mesgLen.dump_VCD(dt, backing.INST_gen1_mesgLen);
  INST_gen1_mesgOutF.dump_VCD(dt, backing.INST_gen1_mesgOutF);
  INST_gen1_minLen.dump_VCD(dt, backing.INST_gen1_minLen);
  INST_gen1_patternV.dump_VCD(dt, backing.INST_gen1_patternV);
  INST_gen1_randomF.dump_VCD(dt, backing.INST_gen1_randomF);
  INST_gen1_seedLFSR.dump_VCD(dt, backing.INST_gen1_seedLFSR);
  INST_gen1_startLFSR.dump_VCD(dt, backing.INST_gen1_startLFSR);
  INST_gen1_tmp.dump_VCD(dt, backing.INST_gen1_tmp);
  INST_gen2_count.dump_VCD(dt, backing.INST_gen2_count);
  INST_gen2_initV.dump_VCD(dt, backing.INST_gen2_initV);
  INST_gen2_lfsr_r.dump_VCD(dt, backing.INST_gen2_lfsr_r);
  INST_gen2_maxLen.dump_VCD(dt, backing.INST_gen2_maxLen);
  INST_gen2_mesgLen.dump_VCD(dt, backing.INST_gen2_mesgLen);
  INST_gen2_mesgOutF.dump_VCD(dt, backing.INST_gen2_mesgOutF);
  INST_gen2_minLen.dump_VCD(dt, backing.INST_gen2_minLen);
  INST_gen2_patternV.dump_VCD(dt, backing.INST_gen2_patternV);
  INST_gen2_randomF.dump_VCD(dt, backing.INST_gen2_randomF);
  INST_gen2_seedLFSR.dump_VCD(dt, backing.INST_gen2_seedLFSR);
  INST_gen2_startLFSR.dump_VCD(dt, backing.INST_gen2_startLFSR);
  INST_gen2_tmp.dump_VCD(dt, backing.INST_gen2_tmp);
}

void MOD_mkFTop_dp705::vcd_submodules(tVCDDumpType dt,
				      unsigned int levels,
				      MOD_mkFTop_dp705 &backing)
{
  INST_buf1.dump_VCD(dt, levels, backing.INST_buf1);
}
