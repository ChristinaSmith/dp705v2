/*
 * Generated by Bluespec Compiler, version 2012.09.beta1 (build 29570, 2012-09.11)
 * 
 * On Tue Oct 16 15:37:58 EDT 2012
 * 
 */
#include "bluesim_primitives.h"
#include "mkBuffer.h"


/* String declarations */
static std::string const __str_literal_1("ERROR: %m: mkBRAMSeverAdapter overrun", 37u);


/* Constructor */
MOD_mkBuffer::MOD_mkBuffer(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_accum_acc_v1(simHdl, "accum_acc_v1", this, 8u, (tUInt8)0u),
    INST_accum_acc_v2(simHdl, "accum_acc_v2", this, 8u, (tUInt8)0u),
    INST_accum_value(simHdl, "accum_value", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_memory(simHdl, "bram_memory", this, (tUInt8)0u, 9u, 32u, 512u, 2u),
    INST_bram_serverAdapterA_cnt(simHdl, "bram_serverAdapterA_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_1(simHdl, "bram_serverAdapterA_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_2(simHdl, "bram_serverAdapterA_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_3(simHdl, "bram_serverAdapterA_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_outDataCore(simHdl,
					 "bram_serverAdapterA_outDataCore",
					 this,
					 32u,
					 3u,
					 1u,
					 0u),
    INST_bram_serverAdapterA_outData_deqCalled(simHdl,
					       "bram_serverAdapterA_outData_deqCalled",
					       this,
					       0u),
    INST_bram_serverAdapterA_outData_enqData(simHdl,
					     "bram_serverAdapterA_outData_enqData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterA_outData_outData(simHdl,
					     "bram_serverAdapterA_outData_outData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterA_s1(simHdl, "bram_serverAdapterA_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterA_s1_1(simHdl, "bram_serverAdapterA_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapterA_writeWithResp(simHdl,
					   "bram_serverAdapterA_writeWithResp",
					   this,
					   2u,
					   (tUInt8)0u),
    INST_bram_serverAdapterB_cnt(simHdl, "bram_serverAdapterB_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_1(simHdl, "bram_serverAdapterB_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_2(simHdl, "bram_serverAdapterB_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_3(simHdl, "bram_serverAdapterB_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_outDataCore(simHdl,
					 "bram_serverAdapterB_outDataCore",
					 this,
					 32u,
					 3u,
					 1u,
					 0u),
    INST_bram_serverAdapterB_outData_deqCalled(simHdl,
					       "bram_serverAdapterB_outData_deqCalled",
					       this,
					       0u),
    INST_bram_serverAdapterB_outData_enqData(simHdl,
					     "bram_serverAdapterB_outData_enqData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterB_outData_outData(simHdl,
					     "bram_serverAdapterB_outData_outData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterB_s1(simHdl, "bram_serverAdapterB_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterB_s1_1(simHdl, "bram_serverAdapterB_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapterB_writeWithResp(simHdl,
					   "bram_serverAdapterB_writeWithResp",
					   this,
					   2u,
					   (tUInt8)0u),
    INST_countRd(simHdl, "countRd", this, 9u, 0u, (tUInt8)0u),
    INST_countRdReq(simHdl, "countRdReq", this, 9u, 0u, (tUInt8)0u),
    INST_countWrd(simHdl, "countWrd", this, 9u, 1u, (tUInt8)0u),
    INST_lenF(simHdl, "lenF", this, 9u, 2u, 1u, 0u),
    INST_mesgInF(simHdl, "mesgInF", this, 33u, 2u, 1u, 0u),
    INST_mesgOutF(simHdl, "mesgOutF", this, 33u, 2u, 1u, 0u),
    INST_msgF(simHdl, "msgF", this, 9u, 1u, 1u, 0u),
    INST_newMsg(simHdl, "newMsg", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_readAddr(simHdl, "readAddr", this, 9u, 0u, (tUInt8)0u),
    INST_writeAddr(simHdl, "writeAddr", this, 9u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_EN_src_get = false;
  PORT_EN_sink_put = false;
  PORT_EN_newLen_get = false;
  PORT_EN_length_dwm = false;
  PORT_sink_put = 0llu;
  PORT_src_get = 0llu;
  PORT_RDY_src_get = false;
  PORT_RDY_sink_put = false;
  PORT_newLen_get = 0u;
  PORT_RDY_newLen_get = false;
  PORT_RDY_length_dwm = false;
  symbol_count = 134u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkBuffer::init_symbols_0()
{
  init_symbol(&symbols[0u], "accum_acc_v1", SYM_MODULE, &INST_accum_acc_v1);
  init_symbol(&symbols[1u], "accum_acc_v2", SYM_MODULE, &INST_accum_acc_v2);
  init_symbol(&symbols[2u], "accum_value", SYM_MODULE, &INST_accum_value);
  init_symbol(&symbols[3u], "b__h1935", SYM_DEF, &DEF_b__h1935, 3u);
  init_symbol(&symbols[4u], "b__h3341", SYM_DEF, &DEF_b__h3341, 3u);
  init_symbol(&symbols[5u], "b__h4531", SYM_DEF, &DEF_b__h4531, 9u);
  init_symbol(&symbols[6u], "bram_memory", SYM_MODULE, &INST_bram_memory);
  init_symbol(&symbols[7u], "bram_serverAdapterA_cnt", SYM_MODULE, &INST_bram_serverAdapterA_cnt);
  init_symbol(&symbols[8u], "bram_serverAdapterA_cnt_1", SYM_MODULE, &INST_bram_serverAdapterA_cnt_1);
  init_symbol(&symbols[9u], "bram_serverAdapterA_cnt_2", SYM_MODULE, &INST_bram_serverAdapterA_cnt_2);
  init_symbol(&symbols[10u],
	      "bram_serverAdapterA_cnt_3",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_cnt_3);
  init_symbol(&symbols[11u],
	      "bram_serverAdapterA_outData_deqCalled",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_deqCalled);
  init_symbol(&symbols[12u],
	      "bram_serverAdapterA_outData_enqData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_enqData);
  init_symbol(&symbols[13u],
	      "bram_serverAdapterA_outData_outData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_outData);
  init_symbol(&symbols[14u],
	      "bram_serverAdapterA_outDataCore",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outDataCore);
  init_symbol(&symbols[15u], "bram_serverAdapterA_s1", SYM_MODULE, &INST_bram_serverAdapterA_s1);
  init_symbol(&symbols[16u], "bram_serverAdapterA_s1_1", SYM_MODULE, &INST_bram_serverAdapterA_s1_1);
  init_symbol(&symbols[17u],
	      "bram_serverAdapterA_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_writeWithResp);
  init_symbol(&symbols[18u], "bram_serverAdapterB_cnt", SYM_MODULE, &INST_bram_serverAdapterB_cnt);
  init_symbol(&symbols[19u],
	      "bram_serverAdapterB_cnt_1",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_1);
  init_symbol(&symbols[20u],
	      "bram_serverAdapterB_cnt_2",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_2);
  init_symbol(&symbols[21u],
	      "bram_serverAdapterB_cnt_3",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_3);
  init_symbol(&symbols[22u],
	      "bram_serverAdapterB_outData_deqCalled",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_deqCalled);
  init_symbol(&symbols[23u],
	      "bram_serverAdapterB_outData_enqData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_enqData);
  init_symbol(&symbols[24u],
	      "bram_serverAdapterB_outData_outData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_outData);
  init_symbol(&symbols[25u],
	      "bram_serverAdapterB_outDataCore",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outDataCore);
  init_symbol(&symbols[26u], "bram_serverAdapterB_s1", SYM_MODULE, &INST_bram_serverAdapterB_s1);
  init_symbol(&symbols[27u], "bram_serverAdapterB_s1_1", SYM_MODULE, &INST_bram_serverAdapterB_s1_1);
  init_symbol(&symbols[28u],
	      "bram_serverAdapterB_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_writeWithResp);
  init_symbol(&symbols[29u], "CAN_FIRE_length_dwm", SYM_DEF, &DEF_CAN_FIRE_length_dwm, 1u);
  init_symbol(&symbols[30u], "CAN_FIRE_newLen_get", SYM_DEF, &DEF_CAN_FIRE_newLen_get, 1u);
  init_symbol(&symbols[31u],
	      "CAN_FIRE_RL_accum_accumulate",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_accum_accumulate,
	      1u);
  init_symbol(&symbols[32u],
	      "CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[33u],
	      "CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[34u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly,
	      1u);
  init_symbol(&symbols[35u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[36u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly,
	      1u);
  init_symbol(&symbols[37u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[38u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[39u],
	      "CAN_FIRE_RL_bram_serverAdapterA_overRun",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun,
	      1u);
  init_symbol(&symbols[40u],
	      "CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update,
	      1u);
  init_symbol(&symbols[41u],
	      "CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[42u],
	      "CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[43u],
	      "CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[44u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly,
	      1u);
  init_symbol(&symbols[45u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[46u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly,
	      1u);
  init_symbol(&symbols[47u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[48u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[49u],
	      "CAN_FIRE_RL_bram_serverAdapterB_overRun",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun,
	      1u);
  init_symbol(&symbols[50u],
	      "CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update,
	      1u);
  init_symbol(&symbols[51u],
	      "CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[52u], "CAN_FIRE_RL_newLength", SYM_DEF, &DEF_CAN_FIRE_RL_newLength, 1u);
  init_symbol(&symbols[53u], "CAN_FIRE_RL_readBRAM", SYM_DEF, &DEF_CAN_FIRE_RL_readBRAM, 1u);
  init_symbol(&symbols[54u], "CAN_FIRE_RL_readReqBRAM", SYM_DEF, &DEF_CAN_FIRE_RL_readReqBRAM, 1u);
  init_symbol(&symbols[55u], "CAN_FIRE_RL_writeBRAM", SYM_DEF, &DEF_CAN_FIRE_RL_writeBRAM, 1u);
  init_symbol(&symbols[56u], "CAN_FIRE_sink_put", SYM_DEF, &DEF_CAN_FIRE_sink_put, 1u);
  init_symbol(&symbols[57u], "CAN_FIRE_src_get", SYM_DEF, &DEF_CAN_FIRE_src_get, 1u);
  init_symbol(&symbols[58u], "countRd", SYM_MODULE, &INST_countRd);
  init_symbol(&symbols[59u], "countRdReq", SYM_MODULE, &INST_countRdReq);
  init_symbol(&symbols[60u], "countWrd", SYM_MODULE, &INST_countWrd);
  init_symbol(&symbols[61u], "EN_length_dwm", SYM_PORT, &PORT_EN_length_dwm, 1u);
  init_symbol(&symbols[62u], "EN_newLen_get", SYM_PORT, &PORT_EN_newLen_get, 1u);
  init_symbol(&symbols[63u], "EN_sink_put", SYM_PORT, &PORT_EN_sink_put, 1u);
  init_symbol(&symbols[64u], "EN_src_get", SYM_PORT, &PORT_EN_src_get, 1u);
  init_symbol(&symbols[65u], "lenF", SYM_MODULE, &INST_lenF);
  init_symbol(&symbols[66u], "mesgInF", SYM_MODULE, &INST_mesgInF);
  init_symbol(&symbols[67u], "mesgOutF", SYM_MODULE, &INST_mesgOutF);
  init_symbol(&symbols[68u], "msgF", SYM_MODULE, &INST_msgF);
  init_symbol(&symbols[69u], "newLen_get", SYM_PORT, &PORT_newLen_get, 9u);
  init_symbol(&symbols[70u], "newMsg", SYM_MODULE, &INST_newMsg);
  init_symbol(&symbols[71u], "RDY_length_dwm", SYM_PORT, &PORT_RDY_length_dwm, 1u);
  init_symbol(&symbols[72u], "RDY_newLen_get", SYM_PORT, &PORT_RDY_newLen_get, 1u);
  init_symbol(&symbols[73u], "RDY_sink_put", SYM_PORT, &PORT_RDY_sink_put, 1u);
  init_symbol(&symbols[74u], "RDY_src_get", SYM_PORT, &PORT_RDY_src_get, 1u);
  init_symbol(&symbols[75u], "RL_accum_accumulate", SYM_RULE);
  init_symbol(&symbols[76u], "RL_bram_serverAdapterA_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[77u], "RL_bram_serverAdapterA_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[78u], "RL_bram_serverAdapterA_outData_deqOnly", SYM_RULE);
  init_symbol(&symbols[79u], "RL_bram_serverAdapterA_outData_enqAndDeq", SYM_RULE);
  init_symbol(&symbols[80u], "RL_bram_serverAdapterA_outData_enqOnly", SYM_RULE);
  init_symbol(&symbols[81u], "RL_bram_serverAdapterA_outData_setFirstCore", SYM_RULE);
  init_symbol(&symbols[82u], "RL_bram_serverAdapterA_outData_setFirstEnq", SYM_RULE);
  init_symbol(&symbols[83u], "RL_bram_serverAdapterA_overRun", SYM_RULE);
  init_symbol(&symbols[84u], "RL_bram_serverAdapterA_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[85u], "RL_bram_serverAdapterA_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[86u], "RL_bram_serverAdapterB_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[87u], "RL_bram_serverAdapterB_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[88u], "RL_bram_serverAdapterB_outData_deqOnly", SYM_RULE);
  init_symbol(&symbols[89u], "RL_bram_serverAdapterB_outData_enqAndDeq", SYM_RULE);
  init_symbol(&symbols[90u], "RL_bram_serverAdapterB_outData_enqOnly", SYM_RULE);
  init_symbol(&symbols[91u], "RL_bram_serverAdapterB_outData_setFirstCore", SYM_RULE);
  init_symbol(&symbols[92u], "RL_bram_serverAdapterB_outData_setFirstEnq", SYM_RULE);
  init_symbol(&symbols[93u], "RL_bram_serverAdapterB_overRun", SYM_RULE);
  init_symbol(&symbols[94u], "RL_bram_serverAdapterB_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[95u], "RL_bram_serverAdapterB_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[96u], "RL_newLength", SYM_RULE);
  init_symbol(&symbols[97u], "RL_readBRAM", SYM_RULE);
  init_symbol(&symbols[98u], "RL_readReqBRAM", SYM_RULE);
  init_symbol(&symbols[99u], "RL_writeBRAM", SYM_RULE);
  init_symbol(&symbols[100u], "readAddr", SYM_MODULE, &INST_readAddr);
  init_symbol(&symbols[101u], "sink_put", SYM_PORT, &PORT_sink_put, 33u);
  init_symbol(&symbols[102u], "src_get", SYM_PORT, &PORT_src_get, 33u);
  init_symbol(&symbols[103u], "WILL_FIRE_length_dwm", SYM_DEF, &DEF_WILL_FIRE_length_dwm, 1u);
  init_symbol(&symbols[104u], "WILL_FIRE_newLen_get", SYM_DEF, &DEF_WILL_FIRE_newLen_get, 1u);
  init_symbol(&symbols[105u],
	      "WILL_FIRE_RL_accum_accumulate",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_accum_accumulate,
	      1u);
  init_symbol(&symbols[106u],
	      "WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[107u],
	      "WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[108u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly,
	      1u);
  init_symbol(&symbols[109u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[110u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly,
	      1u);
  init_symbol(&symbols[111u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[112u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[113u],
	      "WILL_FIRE_RL_bram_serverAdapterA_overRun",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun,
	      1u);
  init_symbol(&symbols[114u],
	      "WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update,
	      1u);
  init_symbol(&symbols[115u],
	      "WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[116u],
	      "WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[117u],
	      "WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[118u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly,
	      1u);
  init_symbol(&symbols[119u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[120u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly,
	      1u);
  init_symbol(&symbols[121u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[122u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[123u],
	      "WILL_FIRE_RL_bram_serverAdapterB_overRun",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun,
	      1u);
  init_symbol(&symbols[124u],
	      "WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update,
	      1u);
  init_symbol(&symbols[125u],
	      "WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[126u], "WILL_FIRE_RL_newLength", SYM_DEF, &DEF_WILL_FIRE_RL_newLength, 1u);
  init_symbol(&symbols[127u], "WILL_FIRE_RL_readBRAM", SYM_DEF, &DEF_WILL_FIRE_RL_readBRAM, 1u);
  init_symbol(&symbols[128u], "WILL_FIRE_RL_readReqBRAM", SYM_DEF, &DEF_WILL_FIRE_RL_readReqBRAM, 1u);
  init_symbol(&symbols[129u], "WILL_FIRE_RL_writeBRAM", SYM_DEF, &DEF_WILL_FIRE_RL_writeBRAM, 1u);
  init_symbol(&symbols[130u], "WILL_FIRE_sink_put", SYM_DEF, &DEF_WILL_FIRE_sink_put, 1u);
  init_symbol(&symbols[131u], "WILL_FIRE_src_get", SYM_DEF, &DEF_WILL_FIRE_src_get, 1u);
  init_symbol(&symbols[132u], "writeAddr", SYM_MODULE, &INST_writeAddr);
  init_symbol(&symbols[133u], "x__h819", SYM_DEF, &DEF_x__h819, 8u);
}


/* Rule actions */

void MOD_mkBuffer::RL_accum_accumulate()
{
  tUInt8 DEF_x__h817;
  tUInt8 DEF_x__h812;
  tUInt8 DEF_y__h818;
  tUInt8 DEF_y__h820;
  DEF_x__h819 = INST_accum_value.METH_read();
  DEF_y__h820 = INST_accum_acc_v1.METH_whas() ? INST_accum_acc_v1.METH_wget() : (tUInt8)0u;
  DEF_y__h818 = INST_accum_acc_v2.METH_whas() ? INST_accum_acc_v2.METH_wget() : (tUInt8)0u;
  DEF_x__h817 = (tUInt8)255u & (DEF_x__h819 + DEF_y__h820);
  DEF_x__h812 = (tUInt8)255u & (DEF_x__h817 + DEF_y__h818);
  INST_accum_value.METH_write(DEF_x__h812);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_setFirstCore()
{
  tUInt32 DEF_x__h1454;
  DEF_x__h1454 = INST_bram_serverAdapterA_outDataCore.METH_first();
  INST_bram_serverAdapterA_outData_outData.METH_wset(DEF_x__h1454);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_setFirstEnq()
{
  DEF_x__h1545 = INST_bram_serverAdapterA_outData_enqData.METH_wget();
  INST_bram_serverAdapterA_outData_outData.METH_wset(DEF_x__h1545);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_enqOnly()
{
  DEF_x__h1545 = INST_bram_serverAdapterA_outData_enqData.METH_wget();
  INST_bram_serverAdapterA_outDataCore.METH_enq(DEF_x__h1545);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_deqOnly()
{
  INST_bram_serverAdapterA_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_enqAndDeq()
{
  DEF_x__h1545 = INST_bram_serverAdapterA_outData_enqData.METH_wget();
  INST_bram_serverAdapterA_outDataCore.METH_enq(DEF_x__h1545);
  INST_bram_serverAdapterA_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterA_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapterA_cnt_3_whas__2_THEN_bram_ETC___d42;
  tUInt8 DEF_b__h1915;
  DEF_b__h1915 = INST_bram_serverAdapterA_cnt_3.METH_wget();
  DEF_b__h1935 = INST_bram_serverAdapterA_cnt.METH_read();
  DEF_bram_serverAdapterA_cnt_3_whas____d208 = INST_bram_serverAdapterA_cnt_3.METH_whas();
  DEF_bram_serverAdapterA_cnt_2_whas____d195 = INST_bram_serverAdapterA_cnt_2.METH_whas();
  DEF_bram_serverAdapterA_cnt_1_whas____d184 = INST_bram_serverAdapterA_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapterA_cnt_3_whas__2_THEN_bram_ETC___d42 = DEF_bram_serverAdapterA_cnt_3_whas____d208 ? DEF_b__h1915 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h1935 + (DEF_bram_serverAdapterA_cnt_1_whas____d184 ? INST_bram_serverAdapterA_cnt_1.METH_wget() : (tUInt8)0u))) + (DEF_bram_serverAdapterA_cnt_2_whas____d195 ? INST_bram_serverAdapterA_cnt_2.METH_wget() : (tUInt8)0u));
  INST_bram_serverAdapterA_cnt.METH_write(DEF_IF_bram_serverAdapterA_cnt_3_whas__2_THEN_bram_ETC___d42);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_s1__dreg_update()
{
  tUInt8 DEF_bram_serverAdapterA_s1_1_whas__3_AND_0_OR_bram_ETC___d51;
  tUInt8 DEF_IF_bram_serverAdapterA_s1_1_wget__4_BIT_1_5_TH_ETC___d225;
  tUInt8 DEF_bram_serverAdapterA_s1_1_wget__4_BIT_0___d214;
  tUInt8 DEF_bram_serverAdapterA_s1_1_wget__4_BIT_1___d206;
  tUInt8 DEF_bram_serverAdapterA_s1_1_whas____d224;
  tUInt8 DEF_bram_serverAdapterA_s1_1_wget____d218;
  DEF_bram_serverAdapterA_s1_1_wget____d218 = INST_bram_serverAdapterA_s1_1.METH_wget();
  DEF_bram_serverAdapterA_s1_1_whas____d224 = INST_bram_serverAdapterA_s1_1.METH_whas();
  DEF_bram_serverAdapterA_s1_1_wget__4_BIT_1___d206 = (tUInt8)(DEF_bram_serverAdapterA_s1_1_wget____d218 >> 1u);
  DEF_bram_serverAdapterA_s1_1_wget__4_BIT_0___d214 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterA_s1_1_wget____d218);
  DEF_IF_bram_serverAdapterA_s1_1_wget__4_BIT_1_5_TH_ETC___d225 = DEF_bram_serverAdapterA_s1_1_wget__4_BIT_1___d206 ? DEF_bram_serverAdapterA_s1_1_wget__4_BIT_0___d214 : DEF_bram_serverAdapterA_s1_1_wget__4_BIT_0___d214;
  DEF_bram_serverAdapterA_s1_1_whas__3_AND_0_OR_bram_ETC___d51 = (tUInt8)3u & (((DEF_bram_serverAdapterA_s1_1_whas____d224 && DEF_bram_serverAdapterA_s1_1_wget__4_BIT_1___d206) << 1u) | (DEF_bram_serverAdapterA_s1_1_whas____d224 ? DEF_IF_bram_serverAdapterA_s1_1_wget__4_BIT_1_5_TH_ETC___d225 : DEF_IF_bram_serverAdapterA_s1_1_wget__4_BIT_1_5_TH_ETC___d225));
  INST_bram_serverAdapterA_s1.METH_write(DEF_bram_serverAdapterA_s1_1_whas__3_AND_0_OR_bram_ETC___d51);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_stageReadResponseAlways()
{
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d58;
  tUInt8 DEF_NOT_bram_serverAdapterA_writeWithResp_wget__3__ETC___d190;
  tUInt8 DEF_ab_BIT_0___h2444;
  tUInt8 DEF_ab_BIT_1___h2438;
  tUInt8 DEF_ab__h2430;
  DEF_ab__h2430 = INST_bram_serverAdapterA_writeWithResp.METH_wget();
  DEF_ab_BIT_1___h2438 = (tUInt8)(DEF_ab__h2430 >> 1u);
  DEF_ab_BIT_0___h2444 = (tUInt8)((tUInt8)1u & DEF_ab__h2430);
  DEF_NOT_bram_serverAdapterA_writeWithResp_wget__3__ETC___d190 = !DEF_ab_BIT_1___h2438 || DEF_ab_BIT_0___h2444;
  DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d58 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapterA_writeWithResp_wget__3__ETC___d190);
  INST_bram_serverAdapterA_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d58);
  if (DEF_NOT_bram_serverAdapterA_writeWithResp_wget__3__ETC___d190)
    INST_bram_serverAdapterA_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_moveToOutFIFO()
{
  tUInt32 DEF_v__h2548;
  DEF_v__h2548 = INST_bram_memory.METH_a_read();
  DEF_bram_serverAdapterA_s1___d210 = INST_bram_serverAdapterA_s1.METH_read();
  DEF_bram_serverAdapterA_s1_9_BIT_0___d215 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterA_s1___d210);
  if (DEF_bram_serverAdapterA_s1_9_BIT_0___d215)
    INST_bram_serverAdapterA_outData_enqData.METH_wset(DEF_v__h2548);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_1);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_setFirstCore()
{
  tUInt32 DEF_x__h2862;
  DEF_x__h2862 = INST_bram_serverAdapterB_outDataCore.METH_first();
  INST_bram_serverAdapterB_outData_outData.METH_wset(DEF_x__h2862);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_setFirstEnq()
{
  DEF_x__h2951 = INST_bram_serverAdapterB_outData_enqData.METH_wget();
  INST_bram_serverAdapterB_outData_outData.METH_wset(DEF_x__h2951);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_enqOnly()
{
  DEF_x__h2951 = INST_bram_serverAdapterB_outData_enqData.METH_wget();
  INST_bram_serverAdapterB_outDataCore.METH_enq(DEF_x__h2951);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_deqOnly()
{
  INST_bram_serverAdapterB_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_enqAndDeq()
{
  DEF_x__h2951 = INST_bram_serverAdapterB_outData_enqData.METH_wget();
  INST_bram_serverAdapterB_outDataCore.METH_enq(DEF_x__h2951);
  INST_bram_serverAdapterB_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterB_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapterB_cnt_3_whas__1_THEN_bram_ETC___d101;
  tUInt8 DEF_b__h3321;
  DEF_b__h3321 = INST_bram_serverAdapterB_cnt_3.METH_wget();
  DEF_b__h3341 = INST_bram_serverAdapterB_cnt.METH_read();
  DEF_bram_serverAdapterB_cnt_3_whas____d209 = INST_bram_serverAdapterB_cnt_3.METH_whas();
  DEF_bram_serverAdapterB_cnt_2_whas____d201 = INST_bram_serverAdapterB_cnt_2.METH_whas();
  DEF_bram_serverAdapterB_cnt_1_whas____d200 = INST_bram_serverAdapterB_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapterB_cnt_3_whas__1_THEN_bram_ETC___d101 = DEF_bram_serverAdapterB_cnt_3_whas____d209 ? DEF_b__h3321 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h3341 + (DEF_bram_serverAdapterB_cnt_1_whas____d200 ? INST_bram_serverAdapterB_cnt_1.METH_wget() : (tUInt8)0u))) + (DEF_bram_serverAdapterB_cnt_2_whas____d201 ? INST_bram_serverAdapterB_cnt_2.METH_wget() : (tUInt8)0u));
  INST_bram_serverAdapterB_cnt.METH_write(DEF_IF_bram_serverAdapterB_cnt_3_whas__1_THEN_bram_ETC___d101);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_s1__dreg_update()
{
  tUInt8 DEF_bram_serverAdapterB_s1_1_whas__02_AND_0_OR_bra_ETC___d110;
  tUInt8 DEF_IF_bram_serverAdapterB_s1_1_wget__03_BIT_1_04__ETC___d227;
  tUInt8 DEF_bram_serverAdapterB_s1_1_wget__03_BIT_0___d216;
  tUInt8 DEF_bram_serverAdapterB_s1_1_wget__03_BIT_1___d207;
  tUInt8 DEF_bram_serverAdapterB_s1_1_whas____d226;
  tUInt8 DEF_bram_serverAdapterB_s1_1_wget____d219;
  DEF_bram_serverAdapterB_s1_1_wget____d219 = INST_bram_serverAdapterB_s1_1.METH_wget();
  DEF_bram_serverAdapterB_s1_1_whas____d226 = INST_bram_serverAdapterB_s1_1.METH_whas();
  DEF_bram_serverAdapterB_s1_1_wget__03_BIT_1___d207 = (tUInt8)(DEF_bram_serverAdapterB_s1_1_wget____d219 >> 1u);
  DEF_bram_serverAdapterB_s1_1_wget__03_BIT_0___d216 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterB_s1_1_wget____d219);
  DEF_IF_bram_serverAdapterB_s1_1_wget__03_BIT_1_04__ETC___d227 = DEF_bram_serverAdapterB_s1_1_wget__03_BIT_1___d207 ? DEF_bram_serverAdapterB_s1_1_wget__03_BIT_0___d216 : DEF_bram_serverAdapterB_s1_1_wget__03_BIT_0___d216;
  DEF_bram_serverAdapterB_s1_1_whas__02_AND_0_OR_bra_ETC___d110 = (tUInt8)3u & (((DEF_bram_serverAdapterB_s1_1_whas____d226 && DEF_bram_serverAdapterB_s1_1_wget__03_BIT_1___d207) << 1u) | (DEF_bram_serverAdapterB_s1_1_whas____d226 ? DEF_IF_bram_serverAdapterB_s1_1_wget__03_BIT_1_04__ETC___d227 : DEF_IF_bram_serverAdapterB_s1_1_wget__03_BIT_1_04__ETC___d227));
  INST_bram_serverAdapterB_s1.METH_write(DEF_bram_serverAdapterB_s1_1_whas__02_AND_0_OR_bra_ETC___d110);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_stageReadResponseAlways()
{
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d117;
  tUInt8 DEF_NOT_bram_serverAdapterB_writeWithResp_wget__12_ETC___d191;
  tUInt8 DEF_ab_BIT_0___h3850;
  tUInt8 DEF_ab_BIT_1___h3844;
  tUInt8 DEF_ab__h3836;
  DEF_ab__h3836 = INST_bram_serverAdapterB_writeWithResp.METH_wget();
  DEF_ab_BIT_1___h3844 = (tUInt8)(DEF_ab__h3836 >> 1u);
  DEF_ab_BIT_0___h3850 = (tUInt8)((tUInt8)1u & DEF_ab__h3836);
  DEF_NOT_bram_serverAdapterB_writeWithResp_wget__12_ETC___d191 = !DEF_ab_BIT_1___h3844 || DEF_ab_BIT_0___h3850;
  DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d117 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapterB_writeWithResp_wget__12_ETC___d191);
  INST_bram_serverAdapterB_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d117);
  if (DEF_NOT_bram_serverAdapterB_writeWithResp_wget__12_ETC___d191)
    INST_bram_serverAdapterB_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_moveToOutFIFO()
{
  tUInt32 DEF_v__h3954;
  DEF_v__h3954 = INST_bram_memory.METH_b_read();
  DEF_bram_serverAdapterB_s1___d211 = INST_bram_serverAdapterB_s1.METH_read();
  DEF_bram_serverAdapterB_s1_18_BIT_0___d217 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterB_s1___d211);
  if (DEF_bram_serverAdapterB_s1_18_BIT_0___d217)
    INST_bram_serverAdapterB_outData_enqData.METH_wset(DEF_v__h3954);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_1);
}

void MOD_mkBuffer::RL_writeBRAM()
{
  tUInt32 DEF_IF_mesgInF_first__30_BIT_32_31_THEN_INV_writeA_ETC___d146;
  tUInt32 DEF_IF_mesgInF_first__30_BIT_32_31_THEN_1_ELSE_cou_ETC___d141;
  tUInt8 DEF_writeAddr_BIT_8___h4458;
  tUInt32 DEF_x3__h4112;
  tUInt32 DEF_b__h4297;
  tUInt32 DEF_b__h4130;
  DEF_mesgInF_first____d187 = INST_mesgInF.METH_first();
  DEF_mesgInF_first__30_BIT_32___d204 = (tUInt8)(DEF_mesgInF_first____d187 >> 32u);
  DEF_b__h4130 = INST_writeAddr.METH_read();
  DEF_b__h4297 = INST_countWrd.METH_read();
  DEF_x3__h4112 = (tUInt32)(DEF_mesgInF_first____d187);
  DEF_writeAddr_BIT_8___h4458 = (tUInt8)(DEF_b__h4130 >> 8u);
  DEF_IF_mesgInF_first__30_BIT_32_31_THEN_1_ELSE_cou_ETC___d141 = DEF_mesgInF_first__30_BIT_32___d204 ? 1u : 511u & (DEF_b__h4297 + 1u);
  DEF_IF_mesgInF_first__30_BIT_32_31_THEN_INV_writeA_ETC___d146 = DEF_mesgInF_first__30_BIT_32___d204 ? 511u & ((((tUInt32)((tUInt8)1u & ~DEF_writeAddr_BIT_8___h4458)) << 8u) | (tUInt32)((tUInt8)0u)) : 511u & (DEF_b__h4130 + 1u);
  INST_mesgInF.METH_deq();
  INST_bram_memory.METH_a_put((tUInt8)1u, DEF_b__h4130, DEF_x3__h4112);
  INST_bram_serverAdapterA_writeWithResp.METH_wset((tUInt8)2u);
  INST_accum_acc_v1.METH_wset((tUInt8)1u);
  INST_countWrd.METH_write(DEF_IF_mesgInF_first__30_BIT_32_31_THEN_1_ELSE_cou_ETC___d141);
  INST_writeAddr.METH_write(DEF_IF_mesgInF_first__30_BIT_32_31_THEN_INV_writeA_ETC___d146);
  if (DEF_mesgInF_first__30_BIT_32___d204)
    INST_msgF.METH_enq(DEF_b__h4297);
}

void MOD_mkBuffer::RL_readReqBRAM()
{
  tUInt32 DEF_IF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58__ETC___d166;
  tUInt8 DEF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58___d212;
  tUInt32 DEF_IF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58__ETC___d161;
  tUInt8 DEF_readAddr_BIT_8___h4796;
  tUInt32 DEF_b__h4614;
  DEF_b__h4614 = INST_readAddr.METH_read();
  DEF_b__h4531 = INST_countRdReq.METH_read();
  DEF_msgF_first____d185 = INST_msgF.METH_first();
  DEF_readAddr_BIT_8___h4796 = (tUInt8)(DEF_b__h4614 >> 8u);
  DEF_msgF_first__51_MINUS_1___d192 = 511u & (DEF_msgF_first____d185 - 1u);
  DEF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58___d212 = DEF_b__h4531 == DEF_msgF_first__51_MINUS_1___d192;
  DEF_IF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58__ETC___d161 = DEF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58___d212 ? 0u : 511u & (DEF_b__h4531 + 1u);
  DEF_IF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58__ETC___d166 = DEF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58___d212 ? 511u & ((((tUInt32)((tUInt8)1u & ~DEF_readAddr_BIT_8___h4796)) << 8u) | (tUInt32)((tUInt8)0u)) : 511u & (DEF_b__h4614 + 1u);
  INST_bram_memory.METH_b_put((tUInt8)0u, DEF_b__h4614, 0u);
  INST_bram_serverAdapterB_writeWithResp.METH_wset((tUInt8)0u);
  INST_accum_acc_v2.METH_wset((tUInt8)255u);
  INST_readAddr.METH_write(DEF_IF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58__ETC___d166);
  INST_countRdReq.METH_write(DEF_IF_countRdReq_50_EQ_msgF_first__51_MINUS_1_58__ETC___d161);
}

void MOD_mkBuffer::RL_readBRAM()
{
  tUInt64 DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58_74_CON_ETC___d178;
  tUInt8 DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58___d205;
  tUInt32 DEF_IF_countRd_73_EQ_msgF_first__51_MINUS_1_58_74__ETC___d176;
  tUInt32 DEF_b__h4992;
  DEF_b__h4992 = INST_countRd.METH_read();
  DEF_msgF_first____d185 = INST_msgF.METH_first();
  DEF_msgF_first__51_MINUS_1___d192 = 511u & (DEF_msgF_first____d185 - 1u);
  DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58___d205 = DEF_b__h4992 == DEF_msgF_first__51_MINUS_1___d192;
  DEF_IF_countRd_73_EQ_msgF_first__51_MINUS_1_58_74__ETC___d176 = DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58___d205 ? 0u : 511u & (DEF_b__h4992 + 1u);
  DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58_74_CON_ETC___d178 = 8589934591llu & ((((tUInt64)(DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58___d205)) << 32u) | (tUInt64)(INST_bram_serverAdapterB_outData_outData.METH_wget()));
  INST_bram_serverAdapterB_outData_deqCalled.METH_wset();
  INST_bram_serverAdapterB_cnt_2.METH_wset((tUInt8)7u);
  INST_countRd.METH_write(DEF_IF_countRd_73_EQ_msgF_first__51_MINUS_1_58_74__ETC___d176);
  INST_mesgOutF.METH_enq(DEF_countRd_73_EQ_msgF_first__51_MINUS_1_58_74_CON_ETC___d178);
}

void MOD_mkBuffer::RL_newLength()
{
  DEF_msgF_first____d185 = INST_msgF.METH_first();
  INST_lenF.METH_enq(DEF_msgF_first____d185);
  INST_newMsg.METH_write((tUInt8)0u);
}


/* Methods */

tUInt64 MOD_mkBuffer::METH_src_get()
{
  tUInt64 DEF_mesgOutF_first____d186;
  PORT_EN_src_get = (tUInt8)1u;
  DEF_WILL_FIRE_src_get = (tUInt8)1u;
  DEF_mesgOutF_first____d186 = INST_mesgOutF.METH_first();
  INST_mesgOutF.METH_deq();
  PORT_src_get = DEF_mesgOutF_first____d186;
  return PORT_src_get;
}

tUInt8 MOD_mkBuffer::METH_RDY_src_get()
{
  DEF_CAN_FIRE_src_get = INST_mesgOutF.METH_i_notEmpty();
  PORT_RDY_src_get = DEF_CAN_FIRE_src_get;
  return PORT_RDY_src_get;
}

void MOD_mkBuffer::METH_sink_put(tUInt64 ARG_sink_put)
{
  PORT_EN_sink_put = (tUInt8)1u;
  DEF_WILL_FIRE_sink_put = (tUInt8)1u;
  PORT_sink_put = ARG_sink_put;
  INST_mesgInF.METH_enq(ARG_sink_put);
}

tUInt8 MOD_mkBuffer::METH_RDY_sink_put()
{
  DEF_CAN_FIRE_sink_put = INST_mesgInF.METH_i_notFull();
  PORT_RDY_sink_put = DEF_CAN_FIRE_sink_put;
  return PORT_RDY_sink_put;
}

tUInt32 MOD_mkBuffer::METH_newLen_get()
{
  tUInt32 DEF_newLen_get__avValue1;
  PORT_EN_newLen_get = (tUInt8)1u;
  DEF_WILL_FIRE_newLen_get = (tUInt8)1u;
  DEF_newLen_get__avValue1 = INST_lenF.METH_first();
  INST_lenF.METH_deq();
  PORT_newLen_get = DEF_newLen_get__avValue1;
  return PORT_newLen_get;
}

tUInt8 MOD_mkBuffer::METH_RDY_newLen_get()
{
  DEF_CAN_FIRE_newLen_get = INST_lenF.METH_i_notEmpty();
  PORT_RDY_newLen_get = DEF_CAN_FIRE_newLen_get;
  return PORT_RDY_newLen_get;
}

void MOD_mkBuffer::METH_length_dwm()
{
  PORT_EN_length_dwm = (tUInt8)1u;
  DEF_WILL_FIRE_length_dwm = (tUInt8)1u;
  INST_msgF.METH_deq();
  INST_newMsg.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkBuffer::METH_RDY_length_dwm()
{
  DEF_msgF_i_notEmpty____d213 = INST_msgF.METH_i_notEmpty();
  DEF_CAN_FIRE_length_dwm = DEF_msgF_i_notEmpty____d213;
  PORT_RDY_length_dwm = DEF_CAN_FIRE_length_dwm;
  return PORT_RDY_length_dwm;
}


/* Reset routines */

void MOD_mkBuffer::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_writeAddr.reset_RST(ARG_rst_in);
  INST_readAddr.reset_RST(ARG_rst_in);
  INST_newMsg.reset_RST(ARG_rst_in);
  INST_msgF.reset_RST(ARG_rst_in);
  INST_mesgOutF.reset_RST(ARG_rst_in);
  INST_mesgInF.reset_RST(ARG_rst_in);
  INST_lenF.reset_RST(ARG_rst_in);
  INST_countWrd.reset_RST(ARG_rst_in);
  INST_countRdReq.reset_RST(ARG_rst_in);
  INST_countRd.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_outDataCore.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_cnt.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_outDataCore.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_cnt.reset_RST(ARG_rst_in);
  INST_accum_value.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkBuffer::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkBuffer::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_accum_acc_v1.dump_state(indent + 2u);
  INST_accum_acc_v2.dump_state(indent + 2u);
  INST_accum_value.dump_state(indent + 2u);
  INST_bram_memory.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outDataCore.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_deqCalled.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_enqData.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_outData.dump_state(indent + 2u);
  INST_bram_serverAdapterA_s1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_writeWithResp.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outDataCore.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_deqCalled.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_enqData.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_outData.dump_state(indent + 2u);
  INST_bram_serverAdapterB_s1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_writeWithResp.dump_state(indent + 2u);
  INST_countRd.dump_state(indent + 2u);
  INST_countRdReq.dump_state(indent + 2u);
  INST_countWrd.dump_state(indent + 2u);
  INST_lenF.dump_state(indent + 2u);
  INST_mesgInF.dump_state(indent + 2u);
  INST_mesgOutF.dump_state(indent + 2u);
  INST_msgF.dump_state(indent + 2u);
  INST_newMsg.dump_state(indent + 2u);
  INST_readAddr.dump_state(indent + 2u);
  INST_writeAddr.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkBuffer::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 127u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_accum_accumulate", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_newLength", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_readBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_readReqBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_writeBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_length_dwm", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_newLen_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_src_get", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_accum_accumulate", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_newLength", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_readBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_readReqBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_writeBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_length_dwm", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_newLen_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_src_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1935", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h3341", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h4531", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_1_whas____d184", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_2_whas____d195", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_3_whas____d208", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_s1_9_BIT_0___d215", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_s1___d210", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_1_whas____d200", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_2_whas____d201", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_3_whas____d209", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_s1_18_BIT_0___d217", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_s1___d211", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mesgInF_first__30_BIT_32___d204", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mesgInF_first____d187", 33u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "msgF_first__51_MINUS_1___d192", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "msgF_first____d185", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "msgF_i_notEmpty____d213", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1545", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2951", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h819", 8u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_length_dwm", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_newLen_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_src_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_length_dwm", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_newLen_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_src_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "newLen_get", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "sink_put", 33u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "src_get", 33u);
  num = INST_accum_acc_v1.dump_VCD_defs(num);
  num = INST_accum_acc_v2.dump_VCD_defs(num);
  num = INST_accum_value.dump_VCD_defs(num);
  num = INST_bram_memory.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outDataCore.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_deqCalled.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_enqData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_outData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_writeWithResp.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outDataCore.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_deqCalled.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_enqData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_outData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_writeWithResp.dump_VCD_defs(num);
  num = INST_countRd.dump_VCD_defs(num);
  num = INST_countRdReq.dump_VCD_defs(num);
  num = INST_countWrd.dump_VCD_defs(num);
  num = INST_lenF.dump_VCD_defs(num);
  num = INST_mesgInF.dump_VCD_defs(num);
  num = INST_mesgOutF.dump_VCD_defs(num);
  num = INST_msgF.dump_VCD_defs(num);
  num = INST_newMsg.dump_VCD_defs(num);
  num = INST_readAddr.dump_VCD_defs(num);
  num = INST_writeAddr.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkBuffer::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBuffer &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkBuffer::vcd_defs(tVCDDumpType dt, MOD_mkBuffer &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 33u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 8u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 33u);
    vcd_write_x(sim_hdl, num++, 33u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_accum_accumulate) != DEF_CAN_FIRE_RL_accum_accumulate)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_accum_accumulate, 1u);
	backing.DEF_CAN_FIRE_RL_accum_accumulate = DEF_CAN_FIRE_RL_accum_accumulate;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd) != DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO) != DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun) != DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update) != DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways) != DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd) != DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO) != DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun) != DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update) != DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways) != DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_newLength) != DEF_CAN_FIRE_RL_newLength)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_newLength, 1u);
	backing.DEF_CAN_FIRE_RL_newLength = DEF_CAN_FIRE_RL_newLength;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_readBRAM) != DEF_CAN_FIRE_RL_readBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_readBRAM, 1u);
	backing.DEF_CAN_FIRE_RL_readBRAM = DEF_CAN_FIRE_RL_readBRAM;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_readReqBRAM) != DEF_CAN_FIRE_RL_readReqBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_readReqBRAM, 1u);
	backing.DEF_CAN_FIRE_RL_readReqBRAM = DEF_CAN_FIRE_RL_readReqBRAM;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_writeBRAM) != DEF_CAN_FIRE_RL_writeBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_writeBRAM, 1u);
	backing.DEF_CAN_FIRE_RL_writeBRAM = DEF_CAN_FIRE_RL_writeBRAM;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_length_dwm) != DEF_CAN_FIRE_length_dwm)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_length_dwm, 1u);
	backing.DEF_CAN_FIRE_length_dwm = DEF_CAN_FIRE_length_dwm;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_newLen_get) != DEF_CAN_FIRE_newLen_get)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_newLen_get, 1u);
	backing.DEF_CAN_FIRE_newLen_get = DEF_CAN_FIRE_newLen_get;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sink_put) != DEF_CAN_FIRE_sink_put)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sink_put, 1u);
	backing.DEF_CAN_FIRE_sink_put = DEF_CAN_FIRE_sink_put;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_src_get) != DEF_CAN_FIRE_src_get)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_src_get, 1u);
	backing.DEF_CAN_FIRE_src_get = DEF_CAN_FIRE_src_get;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_accum_accumulate) != DEF_WILL_FIRE_RL_accum_accumulate)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_accum_accumulate, 1u);
	backing.DEF_WILL_FIRE_RL_accum_accumulate = DEF_WILL_FIRE_RL_accum_accumulate;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd) != DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO) != DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun) != DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update) != DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways) != DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd) != DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO) != DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun) != DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update) != DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways) != DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_newLength) != DEF_WILL_FIRE_RL_newLength)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_newLength, 1u);
	backing.DEF_WILL_FIRE_RL_newLength = DEF_WILL_FIRE_RL_newLength;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_readBRAM) != DEF_WILL_FIRE_RL_readBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_readBRAM, 1u);
	backing.DEF_WILL_FIRE_RL_readBRAM = DEF_WILL_FIRE_RL_readBRAM;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_readReqBRAM) != DEF_WILL_FIRE_RL_readReqBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_readReqBRAM, 1u);
	backing.DEF_WILL_FIRE_RL_readReqBRAM = DEF_WILL_FIRE_RL_readReqBRAM;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_writeBRAM) != DEF_WILL_FIRE_RL_writeBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_writeBRAM, 1u);
	backing.DEF_WILL_FIRE_RL_writeBRAM = DEF_WILL_FIRE_RL_writeBRAM;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_length_dwm) != DEF_WILL_FIRE_length_dwm)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_length_dwm, 1u);
	backing.DEF_WILL_FIRE_length_dwm = DEF_WILL_FIRE_length_dwm;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_newLen_get) != DEF_WILL_FIRE_newLen_get)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_newLen_get, 1u);
	backing.DEF_WILL_FIRE_newLen_get = DEF_WILL_FIRE_newLen_get;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_sink_put) != DEF_WILL_FIRE_sink_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_sink_put, 1u);
	backing.DEF_WILL_FIRE_sink_put = DEF_WILL_FIRE_sink_put;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_src_get) != DEF_WILL_FIRE_src_get)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_src_get, 1u);
	backing.DEF_WILL_FIRE_src_get = DEF_WILL_FIRE_src_get;
      }
      ++num;
      if ((backing.DEF_b__h1935) != DEF_b__h1935)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1935, 3u);
	backing.DEF_b__h1935 = DEF_b__h1935;
      }
      ++num;
      if ((backing.DEF_b__h3341) != DEF_b__h3341)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h3341, 3u);
	backing.DEF_b__h3341 = DEF_b__h3341;
      }
      ++num;
      if ((backing.DEF_b__h4531) != DEF_b__h4531)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h4531, 9u);
	backing.DEF_b__h4531 = DEF_b__h4531;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_1_whas____d184) != DEF_bram_serverAdapterA_cnt_1_whas____d184)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_1_whas____d184, 1u);
	backing.DEF_bram_serverAdapterA_cnt_1_whas____d184 = DEF_bram_serverAdapterA_cnt_1_whas____d184;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_2_whas____d195) != DEF_bram_serverAdapterA_cnt_2_whas____d195)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_2_whas____d195, 1u);
	backing.DEF_bram_serverAdapterA_cnt_2_whas____d195 = DEF_bram_serverAdapterA_cnt_2_whas____d195;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_3_whas____d208) != DEF_bram_serverAdapterA_cnt_3_whas____d208)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_3_whas____d208, 1u);
	backing.DEF_bram_serverAdapterA_cnt_3_whas____d208 = DEF_bram_serverAdapterA_cnt_3_whas____d208;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_s1_9_BIT_0___d215) != DEF_bram_serverAdapterA_s1_9_BIT_0___d215)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_s1_9_BIT_0___d215, 1u);
	backing.DEF_bram_serverAdapterA_s1_9_BIT_0___d215 = DEF_bram_serverAdapterA_s1_9_BIT_0___d215;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_s1___d210) != DEF_bram_serverAdapterA_s1___d210)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_s1___d210, 2u);
	backing.DEF_bram_serverAdapterA_s1___d210 = DEF_bram_serverAdapterA_s1___d210;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_1_whas____d200) != DEF_bram_serverAdapterB_cnt_1_whas____d200)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_1_whas____d200, 1u);
	backing.DEF_bram_serverAdapterB_cnt_1_whas____d200 = DEF_bram_serverAdapterB_cnt_1_whas____d200;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_2_whas____d201) != DEF_bram_serverAdapterB_cnt_2_whas____d201)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_2_whas____d201, 1u);
	backing.DEF_bram_serverAdapterB_cnt_2_whas____d201 = DEF_bram_serverAdapterB_cnt_2_whas____d201;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_3_whas____d209) != DEF_bram_serverAdapterB_cnt_3_whas____d209)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_3_whas____d209, 1u);
	backing.DEF_bram_serverAdapterB_cnt_3_whas____d209 = DEF_bram_serverAdapterB_cnt_3_whas____d209;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_s1_18_BIT_0___d217) != DEF_bram_serverAdapterB_s1_18_BIT_0___d217)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_s1_18_BIT_0___d217, 1u);
	backing.DEF_bram_serverAdapterB_s1_18_BIT_0___d217 = DEF_bram_serverAdapterB_s1_18_BIT_0___d217;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_s1___d211) != DEF_bram_serverAdapterB_s1___d211)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_s1___d211, 2u);
	backing.DEF_bram_serverAdapterB_s1___d211 = DEF_bram_serverAdapterB_s1___d211;
      }
      ++num;
      if ((backing.DEF_mesgInF_first__30_BIT_32___d204) != DEF_mesgInF_first__30_BIT_32___d204)
      {
	vcd_write_val(sim_hdl, num, DEF_mesgInF_first__30_BIT_32___d204, 1u);
	backing.DEF_mesgInF_first__30_BIT_32___d204 = DEF_mesgInF_first__30_BIT_32___d204;
      }
      ++num;
      if ((backing.DEF_mesgInF_first____d187) != DEF_mesgInF_first____d187)
      {
	vcd_write_val(sim_hdl, num, DEF_mesgInF_first____d187, 33u);
	backing.DEF_mesgInF_first____d187 = DEF_mesgInF_first____d187;
      }
      ++num;
      if ((backing.DEF_msgF_first__51_MINUS_1___d192) != DEF_msgF_first__51_MINUS_1___d192)
      {
	vcd_write_val(sim_hdl, num, DEF_msgF_first__51_MINUS_1___d192, 9u);
	backing.DEF_msgF_first__51_MINUS_1___d192 = DEF_msgF_first__51_MINUS_1___d192;
      }
      ++num;
      if ((backing.DEF_msgF_first____d185) != DEF_msgF_first____d185)
      {
	vcd_write_val(sim_hdl, num, DEF_msgF_first____d185, 9u);
	backing.DEF_msgF_first____d185 = DEF_msgF_first____d185;
      }
      ++num;
      if ((backing.DEF_msgF_i_notEmpty____d213) != DEF_msgF_i_notEmpty____d213)
      {
	vcd_write_val(sim_hdl, num, DEF_msgF_i_notEmpty____d213, 1u);
	backing.DEF_msgF_i_notEmpty____d213 = DEF_msgF_i_notEmpty____d213;
      }
      ++num;
      if ((backing.DEF_x__h1545) != DEF_x__h1545)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1545, 32u);
	backing.DEF_x__h1545 = DEF_x__h1545;
      }
      ++num;
      if ((backing.DEF_x__h2951) != DEF_x__h2951)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2951, 32u);
	backing.DEF_x__h2951 = DEF_x__h2951;
      }
      ++num;
      if ((backing.DEF_x__h819) != DEF_x__h819)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h819, 8u);
	backing.DEF_x__h819 = DEF_x__h819;
      }
      ++num;
      if ((backing.PORT_EN_length_dwm) != PORT_EN_length_dwm)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_length_dwm, 1u);
	backing.PORT_EN_length_dwm = PORT_EN_length_dwm;
      }
      ++num;
      if ((backing.PORT_EN_newLen_get) != PORT_EN_newLen_get)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_newLen_get, 1u);
	backing.PORT_EN_newLen_get = PORT_EN_newLen_get;
      }
      ++num;
      if ((backing.PORT_EN_sink_put) != PORT_EN_sink_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_sink_put, 1u);
	backing.PORT_EN_sink_put = PORT_EN_sink_put;
      }
      ++num;
      if ((backing.PORT_EN_src_get) != PORT_EN_src_get)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_src_get, 1u);
	backing.PORT_EN_src_get = PORT_EN_src_get;
      }
      ++num;
      if ((backing.PORT_RDY_length_dwm) != PORT_RDY_length_dwm)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_length_dwm, 1u);
	backing.PORT_RDY_length_dwm = PORT_RDY_length_dwm;
      }
      ++num;
      if ((backing.PORT_RDY_newLen_get) != PORT_RDY_newLen_get)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_newLen_get, 1u);
	backing.PORT_RDY_newLen_get = PORT_RDY_newLen_get;
      }
      ++num;
      if ((backing.PORT_RDY_sink_put) != PORT_RDY_sink_put)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sink_put, 1u);
	backing.PORT_RDY_sink_put = PORT_RDY_sink_put;
      }
      ++num;
      if ((backing.PORT_RDY_src_get) != PORT_RDY_src_get)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_src_get, 1u);
	backing.PORT_RDY_src_get = PORT_RDY_src_get;
      }
      ++num;
      if ((backing.PORT_newLen_get) != PORT_newLen_get)
      {
	vcd_write_val(sim_hdl, num, PORT_newLen_get, 9u);
	backing.PORT_newLen_get = PORT_newLen_get;
      }
      ++num;
      if ((backing.PORT_sink_put) != PORT_sink_put)
      {
	vcd_write_val(sim_hdl, num, PORT_sink_put, 33u);
	backing.PORT_sink_put = PORT_sink_put;
      }
      ++num;
      if ((backing.PORT_src_get) != PORT_src_get)
      {
	vcd_write_val(sim_hdl, num, PORT_src_get, 33u);
	backing.PORT_src_get = PORT_src_get;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_accum_accumulate, 1u);
      backing.DEF_CAN_FIRE_RL_accum_accumulate = DEF_CAN_FIRE_RL_accum_accumulate;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_newLength, 1u);
      backing.DEF_CAN_FIRE_RL_newLength = DEF_CAN_FIRE_RL_newLength;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_readBRAM, 1u);
      backing.DEF_CAN_FIRE_RL_readBRAM = DEF_CAN_FIRE_RL_readBRAM;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_readReqBRAM, 1u);
      backing.DEF_CAN_FIRE_RL_readReqBRAM = DEF_CAN_FIRE_RL_readReqBRAM;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_writeBRAM, 1u);
      backing.DEF_CAN_FIRE_RL_writeBRAM = DEF_CAN_FIRE_RL_writeBRAM;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_length_dwm, 1u);
      backing.DEF_CAN_FIRE_length_dwm = DEF_CAN_FIRE_length_dwm;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_newLen_get, 1u);
      backing.DEF_CAN_FIRE_newLen_get = DEF_CAN_FIRE_newLen_get;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sink_put, 1u);
      backing.DEF_CAN_FIRE_sink_put = DEF_CAN_FIRE_sink_put;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_src_get, 1u);
      backing.DEF_CAN_FIRE_src_get = DEF_CAN_FIRE_src_get;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_accum_accumulate, 1u);
      backing.DEF_WILL_FIRE_RL_accum_accumulate = DEF_WILL_FIRE_RL_accum_accumulate;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_newLength, 1u);
      backing.DEF_WILL_FIRE_RL_newLength = DEF_WILL_FIRE_RL_newLength;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_readBRAM, 1u);
      backing.DEF_WILL_FIRE_RL_readBRAM = DEF_WILL_FIRE_RL_readBRAM;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_readReqBRAM, 1u);
      backing.DEF_WILL_FIRE_RL_readReqBRAM = DEF_WILL_FIRE_RL_readReqBRAM;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_writeBRAM, 1u);
      backing.DEF_WILL_FIRE_RL_writeBRAM = DEF_WILL_FIRE_RL_writeBRAM;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_length_dwm, 1u);
      backing.DEF_WILL_FIRE_length_dwm = DEF_WILL_FIRE_length_dwm;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_newLen_get, 1u);
      backing.DEF_WILL_FIRE_newLen_get = DEF_WILL_FIRE_newLen_get;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_sink_put, 1u);
      backing.DEF_WILL_FIRE_sink_put = DEF_WILL_FIRE_sink_put;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_src_get, 1u);
      backing.DEF_WILL_FIRE_src_get = DEF_WILL_FIRE_src_get;
      vcd_write_val(sim_hdl, num++, DEF_b__h1935, 3u);
      backing.DEF_b__h1935 = DEF_b__h1935;
      vcd_write_val(sim_hdl, num++, DEF_b__h3341, 3u);
      backing.DEF_b__h3341 = DEF_b__h3341;
      vcd_write_val(sim_hdl, num++, DEF_b__h4531, 9u);
      backing.DEF_b__h4531 = DEF_b__h4531;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_1_whas____d184, 1u);
      backing.DEF_bram_serverAdapterA_cnt_1_whas____d184 = DEF_bram_serverAdapterA_cnt_1_whas____d184;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_2_whas____d195, 1u);
      backing.DEF_bram_serverAdapterA_cnt_2_whas____d195 = DEF_bram_serverAdapterA_cnt_2_whas____d195;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_3_whas____d208, 1u);
      backing.DEF_bram_serverAdapterA_cnt_3_whas____d208 = DEF_bram_serverAdapterA_cnt_3_whas____d208;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_s1_9_BIT_0___d215, 1u);
      backing.DEF_bram_serverAdapterA_s1_9_BIT_0___d215 = DEF_bram_serverAdapterA_s1_9_BIT_0___d215;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_s1___d210, 2u);
      backing.DEF_bram_serverAdapterA_s1___d210 = DEF_bram_serverAdapterA_s1___d210;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_1_whas____d200, 1u);
      backing.DEF_bram_serverAdapterB_cnt_1_whas____d200 = DEF_bram_serverAdapterB_cnt_1_whas____d200;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_2_whas____d201, 1u);
      backing.DEF_bram_serverAdapterB_cnt_2_whas____d201 = DEF_bram_serverAdapterB_cnt_2_whas____d201;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_3_whas____d209, 1u);
      backing.DEF_bram_serverAdapterB_cnt_3_whas____d209 = DEF_bram_serverAdapterB_cnt_3_whas____d209;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_s1_18_BIT_0___d217, 1u);
      backing.DEF_bram_serverAdapterB_s1_18_BIT_0___d217 = DEF_bram_serverAdapterB_s1_18_BIT_0___d217;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_s1___d211, 2u);
      backing.DEF_bram_serverAdapterB_s1___d211 = DEF_bram_serverAdapterB_s1___d211;
      vcd_write_val(sim_hdl, num++, DEF_mesgInF_first__30_BIT_32___d204, 1u);
      backing.DEF_mesgInF_first__30_BIT_32___d204 = DEF_mesgInF_first__30_BIT_32___d204;
      vcd_write_val(sim_hdl, num++, DEF_mesgInF_first____d187, 33u);
      backing.DEF_mesgInF_first____d187 = DEF_mesgInF_first____d187;
      vcd_write_val(sim_hdl, num++, DEF_msgF_first__51_MINUS_1___d192, 9u);
      backing.DEF_msgF_first__51_MINUS_1___d192 = DEF_msgF_first__51_MINUS_1___d192;
      vcd_write_val(sim_hdl, num++, DEF_msgF_first____d185, 9u);
      backing.DEF_msgF_first____d185 = DEF_msgF_first____d185;
      vcd_write_val(sim_hdl, num++, DEF_msgF_i_notEmpty____d213, 1u);
      backing.DEF_msgF_i_notEmpty____d213 = DEF_msgF_i_notEmpty____d213;
      vcd_write_val(sim_hdl, num++, DEF_x__h1545, 32u);
      backing.DEF_x__h1545 = DEF_x__h1545;
      vcd_write_val(sim_hdl, num++, DEF_x__h2951, 32u);
      backing.DEF_x__h2951 = DEF_x__h2951;
      vcd_write_val(sim_hdl, num++, DEF_x__h819, 8u);
      backing.DEF_x__h819 = DEF_x__h819;
      vcd_write_val(sim_hdl, num++, PORT_EN_length_dwm, 1u);
      backing.PORT_EN_length_dwm = PORT_EN_length_dwm;
      vcd_write_val(sim_hdl, num++, PORT_EN_newLen_get, 1u);
      backing.PORT_EN_newLen_get = PORT_EN_newLen_get;
      vcd_write_val(sim_hdl, num++, PORT_EN_sink_put, 1u);
      backing.PORT_EN_sink_put = PORT_EN_sink_put;
      vcd_write_val(sim_hdl, num++, PORT_EN_src_get, 1u);
      backing.PORT_EN_src_get = PORT_EN_src_get;
      vcd_write_val(sim_hdl, num++, PORT_RDY_length_dwm, 1u);
      backing.PORT_RDY_length_dwm = PORT_RDY_length_dwm;
      vcd_write_val(sim_hdl, num++, PORT_RDY_newLen_get, 1u);
      backing.PORT_RDY_newLen_get = PORT_RDY_newLen_get;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sink_put, 1u);
      backing.PORT_RDY_sink_put = PORT_RDY_sink_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_src_get, 1u);
      backing.PORT_RDY_src_get = PORT_RDY_src_get;
      vcd_write_val(sim_hdl, num++, PORT_newLen_get, 9u);
      backing.PORT_newLen_get = PORT_newLen_get;
      vcd_write_val(sim_hdl, num++, PORT_sink_put, 33u);
      backing.PORT_sink_put = PORT_sink_put;
      vcd_write_val(sim_hdl, num++, PORT_src_get, 33u);
      backing.PORT_src_get = PORT_src_get;
    }
}

void MOD_mkBuffer::vcd_prims(tVCDDumpType dt, MOD_mkBuffer &backing)
{
  INST_accum_acc_v1.dump_VCD(dt, backing.INST_accum_acc_v1);
  INST_accum_acc_v2.dump_VCD(dt, backing.INST_accum_acc_v2);
  INST_accum_value.dump_VCD(dt, backing.INST_accum_value);
  INST_bram_memory.dump_VCD(dt, backing.INST_bram_memory);
  INST_bram_serverAdapterA_cnt.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt);
  INST_bram_serverAdapterA_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_1);
  INST_bram_serverAdapterA_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_2);
  INST_bram_serverAdapterA_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_3);
  INST_bram_serverAdapterA_outDataCore.dump_VCD(dt, backing.INST_bram_serverAdapterA_outDataCore);
  INST_bram_serverAdapterA_outData_deqCalled.dump_VCD(dt,
						      backing.INST_bram_serverAdapterA_outData_deqCalled);
  INST_bram_serverAdapterA_outData_enqData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterA_outData_enqData);
  INST_bram_serverAdapterA_outData_outData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterA_outData_outData);
  INST_bram_serverAdapterA_s1.dump_VCD(dt, backing.INST_bram_serverAdapterA_s1);
  INST_bram_serverAdapterA_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapterA_s1_1);
  INST_bram_serverAdapterA_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapterA_writeWithResp);
  INST_bram_serverAdapterB_cnt.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt);
  INST_bram_serverAdapterB_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_1);
  INST_bram_serverAdapterB_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_2);
  INST_bram_serverAdapterB_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_3);
  INST_bram_serverAdapterB_outDataCore.dump_VCD(dt, backing.INST_bram_serverAdapterB_outDataCore);
  INST_bram_serverAdapterB_outData_deqCalled.dump_VCD(dt,
						      backing.INST_bram_serverAdapterB_outData_deqCalled);
  INST_bram_serverAdapterB_outData_enqData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterB_outData_enqData);
  INST_bram_serverAdapterB_outData_outData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterB_outData_outData);
  INST_bram_serverAdapterB_s1.dump_VCD(dt, backing.INST_bram_serverAdapterB_s1);
  INST_bram_serverAdapterB_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapterB_s1_1);
  INST_bram_serverAdapterB_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapterB_writeWithResp);
  INST_countRd.dump_VCD(dt, backing.INST_countRd);
  INST_countRdReq.dump_VCD(dt, backing.INST_countRdReq);
  INST_countWrd.dump_VCD(dt, backing.INST_countWrd);
  INST_lenF.dump_VCD(dt, backing.INST_lenF);
  INST_mesgInF.dump_VCD(dt, backing.INST_mesgInF);
  INST_mesgOutF.dump_VCD(dt, backing.INST_mesgOutF);
  INST_msgF.dump_VCD(dt, backing.INST_msgF);
  INST_newMsg.dump_VCD(dt, backing.INST_newMsg);
  INST_readAddr.dump_VCD(dt, backing.INST_readAddr);
  INST_writeAddr.dump_VCD(dt, backing.INST_writeAddr);
}
