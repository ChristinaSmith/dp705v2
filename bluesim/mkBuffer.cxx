/*
 * Generated by Bluespec Compiler, version 2012.09.beta1 (build 29570, 2012-09.11)
 * 
 * On Sun Oct  7 15:17:28 EDT 2012
 * 
 */
#include "bluesim_primitives.h"
#include "mkBuffer.h"


/* String declarations */
static std::string const __str_literal_1("ERROR: %m: mkBRAMSeverAdapter overrun", 37u);


/* Constructor */
MOD_mkBuffer::MOD_mkBuffer(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_bram_memory(simHdl, "bram_memory", this, (tUInt8)0u, 9u, 32u, 512u, 2u),
    INST_bram_serverAdapterA_cnt(simHdl, "bram_serverAdapterA_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_1(simHdl, "bram_serverAdapterA_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_2(simHdl, "bram_serverAdapterA_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_3(simHdl, "bram_serverAdapterA_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_outDataCore(simHdl,
					 "bram_serverAdapterA_outDataCore",
					 this,
					 32u,
					 3u,
					 1u,
					 0u),
    INST_bram_serverAdapterA_outData_deqCalled(simHdl,
					       "bram_serverAdapterA_outData_deqCalled",
					       this,
					       0u),
    INST_bram_serverAdapterA_outData_enqData(simHdl,
					     "bram_serverAdapterA_outData_enqData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterA_outData_outData(simHdl,
					     "bram_serverAdapterA_outData_outData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterA_s1(simHdl, "bram_serverAdapterA_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterA_s1_1(simHdl, "bram_serverAdapterA_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapterA_writeWithResp(simHdl,
					   "bram_serverAdapterA_writeWithResp",
					   this,
					   2u,
					   (tUInt8)0u),
    INST_bram_serverAdapterB_cnt(simHdl, "bram_serverAdapterB_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_1(simHdl, "bram_serverAdapterB_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_2(simHdl, "bram_serverAdapterB_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_3(simHdl, "bram_serverAdapterB_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_outDataCore(simHdl,
					 "bram_serverAdapterB_outDataCore",
					 this,
					 32u,
					 3u,
					 1u,
					 0u),
    INST_bram_serverAdapterB_outData_deqCalled(simHdl,
					       "bram_serverAdapterB_outData_deqCalled",
					       this,
					       0u),
    INST_bram_serverAdapterB_outData_enqData(simHdl,
					     "bram_serverAdapterB_outData_enqData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterB_outData_outData(simHdl,
					     "bram_serverAdapterB_outData_outData",
					     this,
					     32u,
					     (tUInt8)0u),
    INST_bram_serverAdapterB_s1(simHdl, "bram_serverAdapterB_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterB_s1_1(simHdl, "bram_serverAdapterB_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapterB_writeWithResp(simHdl,
					   "bram_serverAdapterB_writeWithResp",
					   this,
					   2u,
					   (tUInt8)0u),
    INST_countRd(simHdl, "countRd", this, 9u, 0u, (tUInt8)0u),
    INST_countRdReq(simHdl, "countRdReq", this, 9u, 0u, (tUInt8)0u),
    INST_countWrd(simHdl, "countWrd", this, 9u, 1u, (tUInt8)0u),
    INST_mesgInF(simHdl, "mesgInF", this, 33u, 2u, 1u, 0u),
    INST_mesgOutF(simHdl, "mesgOutF", this, 33u, 2u, 1u, 0u),
    INST_msgF(simHdl, "msgF", this, 9u, 2u, 1u, 0u),
    INST_readAddr(simHdl, "readAddr", this, 9u, 0u, (tUInt8)0u),
    INST_writeAddr(simHdl, "writeAddr", this, 9u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_EN_src_get = false;
  PORT_EN_sink_put = false;
  PORT_sink_put = 0llu;
  PORT_src_get = 0llu;
  PORT_RDY_src_get = false;
  PORT_RDY_sink_put = false;
  symbol_count = 112u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkBuffer::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h1512", SYM_DEF, &DEF_b__h1512, 3u);
  init_symbol(&symbols[1u], "b__h2917", SYM_DEF, &DEF_b__h2917, 3u);
  init_symbol(&symbols[2u], "bram_memory", SYM_MODULE, &INST_bram_memory);
  init_symbol(&symbols[3u], "bram_serverAdapterA_cnt", SYM_MODULE, &INST_bram_serverAdapterA_cnt);
  init_symbol(&symbols[4u], "bram_serverAdapterA_cnt_1", SYM_MODULE, &INST_bram_serverAdapterA_cnt_1);
  init_symbol(&symbols[5u], "bram_serverAdapterA_cnt_2", SYM_MODULE, &INST_bram_serverAdapterA_cnt_2);
  init_symbol(&symbols[6u], "bram_serverAdapterA_cnt_3", SYM_MODULE, &INST_bram_serverAdapterA_cnt_3);
  init_symbol(&symbols[7u],
	      "bram_serverAdapterA_outData_deqCalled",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_deqCalled);
  init_symbol(&symbols[8u],
	      "bram_serverAdapterA_outData_enqData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_enqData);
  init_symbol(&symbols[9u],
	      "bram_serverAdapterA_outData_outData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_outData);
  init_symbol(&symbols[10u],
	      "bram_serverAdapterA_outDataCore",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outDataCore);
  init_symbol(&symbols[11u], "bram_serverAdapterA_s1", SYM_MODULE, &INST_bram_serverAdapterA_s1);
  init_symbol(&symbols[12u], "bram_serverAdapterA_s1_1", SYM_MODULE, &INST_bram_serverAdapterA_s1_1);
  init_symbol(&symbols[13u],
	      "bram_serverAdapterA_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_writeWithResp);
  init_symbol(&symbols[14u], "bram_serverAdapterB_cnt", SYM_MODULE, &INST_bram_serverAdapterB_cnt);
  init_symbol(&symbols[15u],
	      "bram_serverAdapterB_cnt_1",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_1);
  init_symbol(&symbols[16u],
	      "bram_serverAdapterB_cnt_2",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_2);
  init_symbol(&symbols[17u],
	      "bram_serverAdapterB_cnt_3",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_3);
  init_symbol(&symbols[18u],
	      "bram_serverAdapterB_outData_deqCalled",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_deqCalled);
  init_symbol(&symbols[19u],
	      "bram_serverAdapterB_outData_enqData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_enqData);
  init_symbol(&symbols[20u],
	      "bram_serverAdapterB_outData_outData",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_outData);
  init_symbol(&symbols[21u],
	      "bram_serverAdapterB_outDataCore",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outDataCore);
  init_symbol(&symbols[22u], "bram_serverAdapterB_s1", SYM_MODULE, &INST_bram_serverAdapterB_s1);
  init_symbol(&symbols[23u], "bram_serverAdapterB_s1_1", SYM_MODULE, &INST_bram_serverAdapterB_s1_1);
  init_symbol(&symbols[24u],
	      "bram_serverAdapterB_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_writeWithResp);
  init_symbol(&symbols[25u],
	      "CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[26u],
	      "CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[27u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly,
	      1u);
  init_symbol(&symbols[28u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[29u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly,
	      1u);
  init_symbol(&symbols[30u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[31u],
	      "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[32u],
	      "CAN_FIRE_RL_bram_serverAdapterA_overRun",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun,
	      1u);
  init_symbol(&symbols[33u],
	      "CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update,
	      1u);
  init_symbol(&symbols[34u],
	      "CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[35u],
	      "CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[36u],
	      "CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[37u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly,
	      1u);
  init_symbol(&symbols[38u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[39u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly,
	      1u);
  init_symbol(&symbols[40u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[41u],
	      "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[42u],
	      "CAN_FIRE_RL_bram_serverAdapterB_overRun",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun,
	      1u);
  init_symbol(&symbols[43u],
	      "CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update,
	      1u);
  init_symbol(&symbols[44u],
	      "CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[45u], "CAN_FIRE_RL_readBRAM", SYM_DEF, &DEF_CAN_FIRE_RL_readBRAM, 1u);
  init_symbol(&symbols[46u], "CAN_FIRE_RL_readReqBRAM", SYM_DEF, &DEF_CAN_FIRE_RL_readReqBRAM, 1u);
  init_symbol(&symbols[47u], "CAN_FIRE_RL_writeBRAM", SYM_DEF, &DEF_CAN_FIRE_RL_writeBRAM, 1u);
  init_symbol(&symbols[48u], "CAN_FIRE_sink_put", SYM_DEF, &DEF_CAN_FIRE_sink_put, 1u);
  init_symbol(&symbols[49u], "CAN_FIRE_src_get", SYM_DEF, &DEF_CAN_FIRE_src_get, 1u);
  init_symbol(&symbols[50u], "countRd", SYM_MODULE, &INST_countRd);
  init_symbol(&symbols[51u], "countRdReq", SYM_MODULE, &INST_countRdReq);
  init_symbol(&symbols[52u], "countWrd", SYM_MODULE, &INST_countWrd);
  init_symbol(&symbols[53u], "EN_sink_put", SYM_PORT, &PORT_EN_sink_put, 1u);
  init_symbol(&symbols[54u], "EN_src_get", SYM_PORT, &PORT_EN_src_get, 1u);
  init_symbol(&symbols[55u], "mesgInF", SYM_MODULE, &INST_mesgInF);
  init_symbol(&symbols[56u], "mesgOutF", SYM_MODULE, &INST_mesgOutF);
  init_symbol(&symbols[57u], "msgF", SYM_MODULE, &INST_msgF);
  init_symbol(&symbols[58u], "RDY_sink_put", SYM_PORT, &PORT_RDY_sink_put, 1u);
  init_symbol(&symbols[59u], "RDY_src_get", SYM_PORT, &PORT_RDY_src_get, 1u);
  init_symbol(&symbols[60u], "RL_bram_serverAdapterA_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[61u], "RL_bram_serverAdapterA_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[62u], "RL_bram_serverAdapterA_outData_deqOnly", SYM_RULE);
  init_symbol(&symbols[63u], "RL_bram_serverAdapterA_outData_enqAndDeq", SYM_RULE);
  init_symbol(&symbols[64u], "RL_bram_serverAdapterA_outData_enqOnly", SYM_RULE);
  init_symbol(&symbols[65u], "RL_bram_serverAdapterA_outData_setFirstCore", SYM_RULE);
  init_symbol(&symbols[66u], "RL_bram_serverAdapterA_outData_setFirstEnq", SYM_RULE);
  init_symbol(&symbols[67u], "RL_bram_serverAdapterA_overRun", SYM_RULE);
  init_symbol(&symbols[68u], "RL_bram_serverAdapterA_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[69u], "RL_bram_serverAdapterA_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[70u], "RL_bram_serverAdapterB_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[71u], "RL_bram_serverAdapterB_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[72u], "RL_bram_serverAdapterB_outData_deqOnly", SYM_RULE);
  init_symbol(&symbols[73u], "RL_bram_serverAdapterB_outData_enqAndDeq", SYM_RULE);
  init_symbol(&symbols[74u], "RL_bram_serverAdapterB_outData_enqOnly", SYM_RULE);
  init_symbol(&symbols[75u], "RL_bram_serverAdapterB_outData_setFirstCore", SYM_RULE);
  init_symbol(&symbols[76u], "RL_bram_serverAdapterB_outData_setFirstEnq", SYM_RULE);
  init_symbol(&symbols[77u], "RL_bram_serverAdapterB_overRun", SYM_RULE);
  init_symbol(&symbols[78u], "RL_bram_serverAdapterB_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[79u], "RL_bram_serverAdapterB_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[80u], "RL_readBRAM", SYM_RULE);
  init_symbol(&symbols[81u], "RL_readReqBRAM", SYM_RULE);
  init_symbol(&symbols[82u], "RL_writeBRAM", SYM_RULE);
  init_symbol(&symbols[83u], "readAddr", SYM_MODULE, &INST_readAddr);
  init_symbol(&symbols[84u], "sink_put", SYM_PORT, &PORT_sink_put, 33u);
  init_symbol(&symbols[85u], "src_get", SYM_PORT, &PORT_src_get, 33u);
  init_symbol(&symbols[86u],
	      "WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[87u],
	      "WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[88u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly,
	      1u);
  init_symbol(&symbols[89u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[90u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly,
	      1u);
  init_symbol(&symbols[91u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[92u],
	      "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[93u],
	      "WILL_FIRE_RL_bram_serverAdapterA_overRun",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun,
	      1u);
  init_symbol(&symbols[94u],
	      "WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update,
	      1u);
  init_symbol(&symbols[95u],
	      "WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[96u],
	      "WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[97u],
	      "WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[98u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly,
	      1u);
  init_symbol(&symbols[99u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[100u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly,
	      1u);
  init_symbol(&symbols[101u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[102u],
	      "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[103u],
	      "WILL_FIRE_RL_bram_serverAdapterB_overRun",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun,
	      1u);
  init_symbol(&symbols[104u],
	      "WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update,
	      1u);
  init_symbol(&symbols[105u],
	      "WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[106u], "WILL_FIRE_RL_readBRAM", SYM_DEF, &DEF_WILL_FIRE_RL_readBRAM, 1u);
  init_symbol(&symbols[107u], "WILL_FIRE_RL_readReqBRAM", SYM_DEF, &DEF_WILL_FIRE_RL_readReqBRAM, 1u);
  init_symbol(&symbols[108u], "WILL_FIRE_RL_writeBRAM", SYM_DEF, &DEF_WILL_FIRE_RL_writeBRAM, 1u);
  init_symbol(&symbols[109u], "WILL_FIRE_sink_put", SYM_DEF, &DEF_WILL_FIRE_sink_put, 1u);
  init_symbol(&symbols[110u], "WILL_FIRE_src_get", SYM_DEF, &DEF_WILL_FIRE_src_get, 1u);
  init_symbol(&symbols[111u], "writeAddr", SYM_MODULE, &INST_writeAddr);
}


/* Rule actions */

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_setFirstCore()
{
  tUInt32 DEF_x__h1031;
  DEF_x__h1031 = INST_bram_serverAdapterA_outDataCore.METH_first();
  INST_bram_serverAdapterA_outData_outData.METH_wset(DEF_x__h1031);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_setFirstEnq()
{
  DEF_x__h1122 = INST_bram_serverAdapterA_outData_enqData.METH_wget();
  INST_bram_serverAdapterA_outData_outData.METH_wset(DEF_x__h1122);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_enqOnly()
{
  DEF_x__h1122 = INST_bram_serverAdapterA_outData_enqData.METH_wget();
  INST_bram_serverAdapterA_outDataCore.METH_enq(DEF_x__h1122);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_deqOnly()
{
  INST_bram_serverAdapterA_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterA_outData_enqAndDeq()
{
  DEF_x__h1122 = INST_bram_serverAdapterA_outData_enqData.METH_wget();
  INST_bram_serverAdapterA_outDataCore.METH_enq(DEF_x__h1122);
  INST_bram_serverAdapterA_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterA_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapterA_cnt_3_whas__3_THEN_bram_ETC___d33;
  tUInt8 DEF_b__h1492;
  DEF_b__h1492 = INST_bram_serverAdapterA_cnt_3.METH_wget();
  DEF_b__h1512 = INST_bram_serverAdapterA_cnt.METH_read();
  DEF_bram_serverAdapterA_cnt_3_whas____d184 = INST_bram_serverAdapterA_cnt_3.METH_whas();
  DEF_bram_serverAdapterA_cnt_2_whas____d171 = INST_bram_serverAdapterA_cnt_2.METH_whas();
  DEF_bram_serverAdapterA_cnt_1_whas____d170 = INST_bram_serverAdapterA_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapterA_cnt_3_whas__3_THEN_bram_ETC___d33 = DEF_bram_serverAdapterA_cnt_3_whas____d184 ? DEF_b__h1492 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h1512 + (DEF_bram_serverAdapterA_cnt_1_whas____d170 ? INST_bram_serverAdapterA_cnt_1.METH_wget() : (tUInt8)0u))) + (DEF_bram_serverAdapterA_cnt_2_whas____d171 ? INST_bram_serverAdapterA_cnt_2.METH_wget() : (tUInt8)0u));
  INST_bram_serverAdapterA_cnt.METH_write(DEF_IF_bram_serverAdapterA_cnt_3_whas__3_THEN_bram_ETC___d33);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_s1__dreg_update()
{
  tUInt8 DEF_bram_serverAdapterA_s1_1_whas__4_AND_0_OR_bram_ETC___d42;
  tUInt8 DEF_IF_bram_serverAdapterA_s1_1_wget__5_BIT_1_6_TH_ETC___d203;
  tUInt8 DEF_bram_serverAdapterA_s1_1_wget__5_BIT_0___d191;
  tUInt8 DEF_bram_serverAdapterA_s1_1_wget__5_BIT_1___d182;
  tUInt8 DEF_bram_serverAdapterA_s1_1_whas____d202;
  tUInt8 DEF_bram_serverAdapterA_s1_1_wget____d193;
  DEF_bram_serverAdapterA_s1_1_wget____d193 = INST_bram_serverAdapterA_s1_1.METH_wget();
  DEF_bram_serverAdapterA_s1_1_whas____d202 = INST_bram_serverAdapterA_s1_1.METH_whas();
  DEF_bram_serverAdapterA_s1_1_wget__5_BIT_1___d182 = (tUInt8)(DEF_bram_serverAdapterA_s1_1_wget____d193 >> 1u);
  DEF_bram_serverAdapterA_s1_1_wget__5_BIT_0___d191 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterA_s1_1_wget____d193);
  DEF_IF_bram_serverAdapterA_s1_1_wget__5_BIT_1_6_TH_ETC___d203 = DEF_bram_serverAdapterA_s1_1_wget__5_BIT_1___d182 ? DEF_bram_serverAdapterA_s1_1_wget__5_BIT_0___d191 : DEF_bram_serverAdapterA_s1_1_wget__5_BIT_0___d191;
  DEF_bram_serverAdapterA_s1_1_whas__4_AND_0_OR_bram_ETC___d42 = (tUInt8)3u & (((DEF_bram_serverAdapterA_s1_1_whas____d202 && DEF_bram_serverAdapterA_s1_1_wget__5_BIT_1___d182) << 1u) | (DEF_bram_serverAdapterA_s1_1_whas____d202 ? DEF_IF_bram_serverAdapterA_s1_1_wget__5_BIT_1_6_TH_ETC___d203 : DEF_IF_bram_serverAdapterA_s1_1_wget__5_BIT_1_6_TH_ETC___d203));
  INST_bram_serverAdapterA_s1.METH_write(DEF_bram_serverAdapterA_s1_1_whas__4_AND_0_OR_bram_ETC___d42);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_stageReadResponseAlways()
{
  tUInt8 DEF_NOT_bram_serverAdapterA_writeWithResp_wget__4__ETC___d185;
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d49;
  tUInt8 DEF_ab_BIT_0___h2021;
  tUInt8 DEF_ab_BIT_1___h2015;
  tUInt8 DEF_ab__h2007;
  DEF_ab__h2007 = INST_bram_serverAdapterA_writeWithResp.METH_wget();
  DEF_ab_BIT_1___h2015 = (tUInt8)(DEF_ab__h2007 >> 1u);
  DEF_ab_BIT_0___h2021 = (tUInt8)((tUInt8)1u & DEF_ab__h2007);
  DEF_NOT_bram_serverAdapterA_writeWithResp_wget__4__ETC___d185 = !DEF_ab_BIT_1___h2015 || DEF_ab_BIT_0___h2021;
  DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d49 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapterA_writeWithResp_wget__4__ETC___d185);
  INST_bram_serverAdapterA_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d49);
  if (DEF_NOT_bram_serverAdapterA_writeWithResp_wget__4__ETC___d185)
    INST_bram_serverAdapterA_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_moveToOutFIFO()
{
  tUInt8 DEF_bram_serverAdapterA_s1_1_BIT_0___d194;
  tUInt32 DEF_v__h2125;
  DEF_v__h2125 = INST_bram_memory.METH_a_read();
  DEF_bram_serverAdapterA_s1___d188 = INST_bram_serverAdapterA_s1.METH_read();
  DEF_bram_serverAdapterA_s1_1_BIT_0___d194 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterA_s1___d188);
  if (DEF_bram_serverAdapterA_s1_1_BIT_0___d194)
    INST_bram_serverAdapterA_outData_enqData.METH_wset(DEF_v__h2125);
}

void MOD_mkBuffer::RL_bram_serverAdapterA_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_1);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_setFirstCore()
{
  tUInt32 DEF_x__h2438;
  DEF_x__h2438 = INST_bram_serverAdapterB_outDataCore.METH_first();
  INST_bram_serverAdapterB_outData_outData.METH_wset(DEF_x__h2438);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_setFirstEnq()
{
  DEF_x__h2527 = INST_bram_serverAdapterB_outData_enqData.METH_wget();
  INST_bram_serverAdapterB_outData_outData.METH_wset(DEF_x__h2527);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_enqOnly()
{
  DEF_x__h2527 = INST_bram_serverAdapterB_outData_enqData.METH_wget();
  INST_bram_serverAdapterB_outDataCore.METH_enq(DEF_x__h2527);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_deqOnly()
{
  INST_bram_serverAdapterB_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterB_outData_enqAndDeq()
{
  DEF_x__h2527 = INST_bram_serverAdapterB_outData_enqData.METH_wget();
  INST_bram_serverAdapterB_outDataCore.METH_enq(DEF_x__h2527);
  INST_bram_serverAdapterB_outDataCore.METH_deq();
}

void MOD_mkBuffer::RL_bram_serverAdapterB_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapterB_cnt_3_whas__0_THEN_bram_ETC___d90;
  tUInt8 DEF_b__h2897;
  DEF_b__h2897 = INST_bram_serverAdapterB_cnt_3.METH_wget();
  DEF_b__h2917 = INST_bram_serverAdapterB_cnt.METH_read();
  DEF_bram_serverAdapterB_cnt_3_whas____d186 = INST_bram_serverAdapterB_cnt_3.METH_whas();
  DEF_bram_serverAdapterB_cnt_2_whas____d177 = INST_bram_serverAdapterB_cnt_2.METH_whas();
  DEF_bram_serverAdapterB_cnt_1_whas____d176 = INST_bram_serverAdapterB_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapterB_cnt_3_whas__0_THEN_bram_ETC___d90 = DEF_bram_serverAdapterB_cnt_3_whas____d186 ? DEF_b__h2897 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h2917 + (DEF_bram_serverAdapterB_cnt_1_whas____d176 ? INST_bram_serverAdapterB_cnt_1.METH_wget() : (tUInt8)0u))) + (DEF_bram_serverAdapterB_cnt_2_whas____d177 ? INST_bram_serverAdapterB_cnt_2.METH_wget() : (tUInt8)0u));
  INST_bram_serverAdapterB_cnt.METH_write(DEF_IF_bram_serverAdapterB_cnt_3_whas__0_THEN_bram_ETC___d90);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_s1__dreg_update()
{
  tUInt8 DEF_bram_serverAdapterB_s1_1_whas__1_AND_0_OR_bram_ETC___d99;
  tUInt8 DEF_IF_bram_serverAdapterB_s1_1_wget__2_BIT_1_3_TH_ETC___d205;
  tUInt8 DEF_bram_serverAdapterB_s1_1_wget__2_BIT_0___d192;
  tUInt8 DEF_bram_serverAdapterB_s1_1_wget__2_BIT_1___d183;
  tUInt8 DEF_bram_serverAdapterB_s1_1_whas____d204;
  tUInt8 DEF_bram_serverAdapterB_s1_1_wget____d195;
  DEF_bram_serverAdapterB_s1_1_wget____d195 = INST_bram_serverAdapterB_s1_1.METH_wget();
  DEF_bram_serverAdapterB_s1_1_whas____d204 = INST_bram_serverAdapterB_s1_1.METH_whas();
  DEF_bram_serverAdapterB_s1_1_wget__2_BIT_1___d183 = (tUInt8)(DEF_bram_serverAdapterB_s1_1_wget____d195 >> 1u);
  DEF_bram_serverAdapterB_s1_1_wget__2_BIT_0___d192 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterB_s1_1_wget____d195);
  DEF_IF_bram_serverAdapterB_s1_1_wget__2_BIT_1_3_TH_ETC___d205 = DEF_bram_serverAdapterB_s1_1_wget__2_BIT_1___d183 ? DEF_bram_serverAdapterB_s1_1_wget__2_BIT_0___d192 : DEF_bram_serverAdapterB_s1_1_wget__2_BIT_0___d192;
  DEF_bram_serverAdapterB_s1_1_whas__1_AND_0_OR_bram_ETC___d99 = (tUInt8)3u & (((DEF_bram_serverAdapterB_s1_1_whas____d204 && DEF_bram_serverAdapterB_s1_1_wget__2_BIT_1___d183) << 1u) | (DEF_bram_serverAdapterB_s1_1_whas____d204 ? DEF_IF_bram_serverAdapterB_s1_1_wget__2_BIT_1_3_TH_ETC___d205 : DEF_IF_bram_serverAdapterB_s1_1_wget__2_BIT_1_3_TH_ETC___d205));
  INST_bram_serverAdapterB_s1.METH_write(DEF_bram_serverAdapterB_s1_1_whas__1_AND_0_OR_bram_ETC___d99);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_stageReadResponseAlways()
{
  tUInt8 DEF_NOT_bram_serverAdapterB_writeWithResp_wget__01_ETC___d187;
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d106;
  tUInt8 DEF_ab_BIT_0___h3426;
  tUInt8 DEF_ab_BIT_1___h3420;
  tUInt8 DEF_ab__h3412;
  DEF_ab__h3412 = INST_bram_serverAdapterB_writeWithResp.METH_wget();
  DEF_ab_BIT_1___h3420 = (tUInt8)(DEF_ab__h3412 >> 1u);
  DEF_ab_BIT_0___h3426 = (tUInt8)((tUInt8)1u & DEF_ab__h3412);
  DEF_NOT_bram_serverAdapterB_writeWithResp_wget__01_ETC___d187 = !DEF_ab_BIT_1___h3420 || DEF_ab_BIT_0___h3426;
  DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d106 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapterB_writeWithResp_wget__01_ETC___d187);
  INST_bram_serverAdapterB_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d106);
  if (DEF_NOT_bram_serverAdapterB_writeWithResp_wget__01_ETC___d187)
    INST_bram_serverAdapterB_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_moveToOutFIFO()
{
  tUInt8 DEF_bram_serverAdapterB_s1_08_BIT_0___d196;
  tUInt32 DEF_v__h3530;
  DEF_v__h3530 = INST_bram_memory.METH_b_read();
  DEF_bram_serverAdapterB_s1___d189 = INST_bram_serverAdapterB_s1.METH_read();
  DEF_bram_serverAdapterB_s1_08_BIT_0___d196 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterB_s1___d189);
  if (DEF_bram_serverAdapterB_s1_08_BIT_0___d196)
    INST_bram_serverAdapterB_outData_enqData.METH_wset(DEF_v__h3530);
}

void MOD_mkBuffer::RL_bram_serverAdapterB_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_1);
}

void MOD_mkBuffer::RL_writeBRAM()
{
  tUInt32 DEF_IF_mesgInF_first__21_BIT_32_23_THEN_INV_writeA_ETC___d131;
  tUInt32 DEF_IF_mesgInF_first__21_BIT_32_23_THEN_1_ELSE_cou_ETC___d126;
  tUInt8 DEF_writeAddr_BIT_8___h3999;
  tUInt32 DEF_x3__h3687;
  tUInt32 DEF_b__h3838;
  tUInt32 DEF_b__h3705;
  tUInt64 DEF_mesgInF_first____d164;
  tUInt8 DEF_mesgInF_first__21_BIT_32___d180;
  DEF_mesgInF_first____d164 = INST_mesgInF.METH_first();
  DEF_mesgInF_first__21_BIT_32___d180 = (tUInt8)(DEF_mesgInF_first____d164 >> 32u);
  DEF_b__h3705 = INST_writeAddr.METH_read();
  DEF_b__h3838 = INST_countWrd.METH_read();
  DEF_x3__h3687 = (tUInt32)(DEF_mesgInF_first____d164);
  DEF_writeAddr_BIT_8___h3999 = (tUInt8)(DEF_b__h3705 >> 8u);
  DEF_IF_mesgInF_first__21_BIT_32_23_THEN_1_ELSE_cou_ETC___d126 = DEF_mesgInF_first__21_BIT_32___d180 ? 1u : 511u & (DEF_b__h3838 + 1u);
  DEF_IF_mesgInF_first__21_BIT_32_23_THEN_INV_writeA_ETC___d131 = DEF_mesgInF_first__21_BIT_32___d180 ? 511u & ((((tUInt32)((tUInt8)1u & ~DEF_writeAddr_BIT_8___h3999)) << 8u) | (tUInt32)((tUInt8)0u)) : 511u & (DEF_b__h3705 + 1u);
  INST_mesgInF.METH_deq();
  INST_bram_memory.METH_a_put((tUInt8)1u, DEF_b__h3705, DEF_x3__h3687);
  INST_bram_serverAdapterA_writeWithResp.METH_wset((tUInt8)2u);
  INST_countWrd.METH_write(DEF_IF_mesgInF_first__21_BIT_32_23_THEN_1_ELSE_cou_ETC___d126);
  INST_writeAddr.METH_write(DEF_IF_mesgInF_first__21_BIT_32_23_THEN_INV_writeA_ETC___d131);
  if (DEF_mesgInF_first__21_BIT_32___d180)
    INST_msgF.METH_enq(DEF_b__h3838);
}

void MOD_mkBuffer::RL_readReqBRAM()
{
  tUInt8 DEF_countRdReq_37_ULT_msgF_first__38___d139;
  tUInt32 DEF_IF_countRdReq_37_EQ_msgF_first__38_41_THEN_INV_ETC___d148;
  tUInt8 DEF_countRdReq_37_EQ_msgF_first__38___d190;
  tUInt32 DEF_IF_countRdReq_37_EQ_msgF_first__38_41_THEN_0_E_ETC___d143;
  tUInt8 DEF_readAddr_BIT_8___h4327;
  tUInt32 DEF_b__h4089;
  tUInt32 DEF_b__h4161;
  DEF_b__h4161 = INST_readAddr.METH_read();
  DEF_b__h4089 = INST_countRdReq.METH_read();
  DEF_msgF_first____d165 = INST_msgF.METH_first();
  DEF_readAddr_BIT_8___h4327 = (tUInt8)(DEF_b__h4161 >> 8u);
  DEF_countRdReq_37_EQ_msgF_first__38___d190 = DEF_b__h4089 == DEF_msgF_first____d165;
  DEF_IF_countRdReq_37_EQ_msgF_first__38_41_THEN_0_E_ETC___d143 = DEF_countRdReq_37_EQ_msgF_first__38___d190 ? 0u : 511u & (DEF_b__h4089 + 1u);
  DEF_IF_countRdReq_37_EQ_msgF_first__38_41_THEN_INV_ETC___d148 = DEF_countRdReq_37_EQ_msgF_first__38___d190 ? 511u & ((((tUInt32)((tUInt8)1u & ~DEF_readAddr_BIT_8___h4327)) << 8u) | (tUInt32)((tUInt8)0u)) : 511u & (DEF_b__h4161 + 1u);
  DEF_countRdReq_37_ULT_msgF_first__38___d139 = DEF_b__h4089 < DEF_msgF_first____d165;
  if (DEF_countRdReq_37_ULT_msgF_first__38___d139)
    INST_bram_memory.METH_b_put((tUInt8)0u, DEF_b__h4161, 0u);
  if (DEF_countRdReq_37_ULT_msgF_first__38___d139)
    INST_bram_serverAdapterB_writeWithResp.METH_wset((tUInt8)0u);
  INST_countRdReq.METH_write(DEF_IF_countRdReq_37_EQ_msgF_first__38_41_THEN_0_E_ETC___d143);
  INST_readAddr.METH_write(DEF_IF_countRdReq_37_EQ_msgF_first__38_41_THEN_INV_ETC___d148);
}

void MOD_mkBuffer::RL_readBRAM()
{
  tUInt64 DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56_57_CON_ETC___d161;
  tUInt8 DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56___d181;
  tUInt32 DEF_IF_countRd_55_EQ_msgF_first__38_MINUS_1_56_57__ETC___d159;
  tUInt32 DEF_b__h4521;
  DEF_b__h4521 = INST_countRd.METH_read();
  DEF_msgF_first____d165 = INST_msgF.METH_first();
  DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56___d181 = DEF_b__h4521 == (511u & (DEF_msgF_first____d165 - 1u));
  DEF_IF_countRd_55_EQ_msgF_first__38_MINUS_1_56_57__ETC___d159 = DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56___d181 ? 0u : 511u & (DEF_b__h4521 + 1u);
  DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56_57_CON_ETC___d161 = 8589934591llu & ((((tUInt64)(DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56___d181)) << 32u) | (tUInt64)(INST_bram_serverAdapterB_outData_outData.METH_wget()));
  INST_bram_serverAdapterB_outData_deqCalled.METH_wset();
  INST_bram_serverAdapterB_cnt_2.METH_wset((tUInt8)7u);
  INST_countRd.METH_write(DEF_IF_countRd_55_EQ_msgF_first__38_MINUS_1_56_57__ETC___d159);
  INST_mesgOutF.METH_enq(DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56_57_CON_ETC___d161);
  if (DEF_countRd_55_EQ_msgF_first__38_MINUS_1_56___d181)
    INST_msgF.METH_deq();
}


/* Methods */

tUInt64 MOD_mkBuffer::METH_src_get()
{
  tUInt64 DEF_mesgOutF_first____d163;
  PORT_EN_src_get = (tUInt8)1u;
  DEF_WILL_FIRE_src_get = (tUInt8)1u;
  DEF_mesgOutF_first____d163 = INST_mesgOutF.METH_first();
  INST_mesgOutF.METH_deq();
  PORT_src_get = DEF_mesgOutF_first____d163;
  return PORT_src_get;
}

tUInt8 MOD_mkBuffer::METH_RDY_src_get()
{
  DEF_CAN_FIRE_src_get = INST_mesgOutF.METH_i_notEmpty();
  PORT_RDY_src_get = DEF_CAN_FIRE_src_get;
  return PORT_RDY_src_get;
}

void MOD_mkBuffer::METH_sink_put(tUInt64 ARG_sink_put)
{
  PORT_EN_sink_put = (tUInt8)1u;
  DEF_WILL_FIRE_sink_put = (tUInt8)1u;
  PORT_sink_put = ARG_sink_put;
  INST_mesgInF.METH_enq(ARG_sink_put);
}

tUInt8 MOD_mkBuffer::METH_RDY_sink_put()
{
  DEF_CAN_FIRE_sink_put = INST_mesgInF.METH_i_notFull();
  PORT_RDY_sink_put = DEF_CAN_FIRE_sink_put;
  return PORT_RDY_sink_put;
}


/* Reset routines */

void MOD_mkBuffer::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_writeAddr.reset_RST(ARG_rst_in);
  INST_readAddr.reset_RST(ARG_rst_in);
  INST_msgF.reset_RST(ARG_rst_in);
  INST_mesgOutF.reset_RST(ARG_rst_in);
  INST_mesgInF.reset_RST(ARG_rst_in);
  INST_countWrd.reset_RST(ARG_rst_in);
  INST_countRdReq.reset_RST(ARG_rst_in);
  INST_countRd.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_outDataCore.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_cnt.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_outDataCore.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_cnt.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkBuffer::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkBuffer::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_bram_memory.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outDataCore.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_deqCalled.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_enqData.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_outData.dump_state(indent + 2u);
  INST_bram_serverAdapterA_s1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_writeWithResp.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outDataCore.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_deqCalled.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_enqData.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_outData.dump_state(indent + 2u);
  INST_bram_serverAdapterB_s1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_writeWithResp.dump_state(indent + 2u);
  INST_countRd.dump_state(indent + 2u);
  INST_countRdReq.dump_state(indent + 2u);
  INST_countWrd.dump_state(indent + 2u);
  INST_mesgInF.dump_state(indent + 2u);
  INST_mesgOutF.dump_state(indent + 2u);
  INST_msgF.dump_state(indent + 2u);
  INST_readAddr.dump_state(indent + 2u);
  INST_writeAddr.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkBuffer::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 101u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_readBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_readReqBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_writeBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_src_get", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_readBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_readReqBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_writeBRAM", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_src_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1512", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h2917", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_1_whas____d170", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_2_whas____d171", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_3_whas____d184", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_s1___d188", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_1_whas____d176", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_2_whas____d177", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_3_whas____d186", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_s1___d189", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "msgF_first____d165", 9u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1122", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2527", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_src_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_sink_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_src_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "sink_put", 33u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "src_get", 33u);
  num = INST_bram_memory.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outDataCore.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_deqCalled.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_enqData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_outData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_writeWithResp.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outDataCore.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_deqCalled.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_enqData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_outData.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_writeWithResp.dump_VCD_defs(num);
  num = INST_countRd.dump_VCD_defs(num);
  num = INST_countRdReq.dump_VCD_defs(num);
  num = INST_countWrd.dump_VCD_defs(num);
  num = INST_mesgInF.dump_VCD_defs(num);
  num = INST_mesgOutF.dump_VCD_defs(num);
  num = INST_msgF.dump_VCD_defs(num);
  num = INST_readAddr.dump_VCD_defs(num);
  num = INST_writeAddr.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkBuffer::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBuffer &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkBuffer::vcd_defs(tVCDDumpType dt, MOD_mkBuffer &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 9u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 33u);
    vcd_write_x(sim_hdl, num++, 33u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd) != DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO) != DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq) != DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun) != DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update) != DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways) != DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd) != DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO) != DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq) != DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun) != DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update) != DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways) != DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_readBRAM) != DEF_CAN_FIRE_RL_readBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_readBRAM, 1u);
	backing.DEF_CAN_FIRE_RL_readBRAM = DEF_CAN_FIRE_RL_readBRAM;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_readReqBRAM) != DEF_CAN_FIRE_RL_readReqBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_readReqBRAM, 1u);
	backing.DEF_CAN_FIRE_RL_readReqBRAM = DEF_CAN_FIRE_RL_readReqBRAM;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_writeBRAM) != DEF_CAN_FIRE_RL_writeBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_writeBRAM, 1u);
	backing.DEF_CAN_FIRE_RL_writeBRAM = DEF_CAN_FIRE_RL_writeBRAM;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_sink_put) != DEF_CAN_FIRE_sink_put)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_sink_put, 1u);
	backing.DEF_CAN_FIRE_sink_put = DEF_CAN_FIRE_sink_put;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_src_get) != DEF_CAN_FIRE_src_get)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_src_get, 1u);
	backing.DEF_CAN_FIRE_src_get = DEF_CAN_FIRE_src_get;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd) != DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO) != DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq) != DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun) != DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update) != DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways) != DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd) != DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO) != DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq) != DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun) != DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update) != DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways) != DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_readBRAM) != DEF_WILL_FIRE_RL_readBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_readBRAM, 1u);
	backing.DEF_WILL_FIRE_RL_readBRAM = DEF_WILL_FIRE_RL_readBRAM;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_readReqBRAM) != DEF_WILL_FIRE_RL_readReqBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_readReqBRAM, 1u);
	backing.DEF_WILL_FIRE_RL_readReqBRAM = DEF_WILL_FIRE_RL_readReqBRAM;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_writeBRAM) != DEF_WILL_FIRE_RL_writeBRAM)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_writeBRAM, 1u);
	backing.DEF_WILL_FIRE_RL_writeBRAM = DEF_WILL_FIRE_RL_writeBRAM;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_sink_put) != DEF_WILL_FIRE_sink_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_sink_put, 1u);
	backing.DEF_WILL_FIRE_sink_put = DEF_WILL_FIRE_sink_put;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_src_get) != DEF_WILL_FIRE_src_get)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_src_get, 1u);
	backing.DEF_WILL_FIRE_src_get = DEF_WILL_FIRE_src_get;
      }
      ++num;
      if ((backing.DEF_b__h1512) != DEF_b__h1512)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1512, 3u);
	backing.DEF_b__h1512 = DEF_b__h1512;
      }
      ++num;
      if ((backing.DEF_b__h2917) != DEF_b__h2917)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h2917, 3u);
	backing.DEF_b__h2917 = DEF_b__h2917;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_1_whas____d170) != DEF_bram_serverAdapterA_cnt_1_whas____d170)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_1_whas____d170, 1u);
	backing.DEF_bram_serverAdapterA_cnt_1_whas____d170 = DEF_bram_serverAdapterA_cnt_1_whas____d170;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_2_whas____d171) != DEF_bram_serverAdapterA_cnt_2_whas____d171)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_2_whas____d171, 1u);
	backing.DEF_bram_serverAdapterA_cnt_2_whas____d171 = DEF_bram_serverAdapterA_cnt_2_whas____d171;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_3_whas____d184) != DEF_bram_serverAdapterA_cnt_3_whas____d184)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_3_whas____d184, 1u);
	backing.DEF_bram_serverAdapterA_cnt_3_whas____d184 = DEF_bram_serverAdapterA_cnt_3_whas____d184;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_s1___d188) != DEF_bram_serverAdapterA_s1___d188)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_s1___d188, 2u);
	backing.DEF_bram_serverAdapterA_s1___d188 = DEF_bram_serverAdapterA_s1___d188;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_1_whas____d176) != DEF_bram_serverAdapterB_cnt_1_whas____d176)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_1_whas____d176, 1u);
	backing.DEF_bram_serverAdapterB_cnt_1_whas____d176 = DEF_bram_serverAdapterB_cnt_1_whas____d176;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_2_whas____d177) != DEF_bram_serverAdapterB_cnt_2_whas____d177)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_2_whas____d177, 1u);
	backing.DEF_bram_serverAdapterB_cnt_2_whas____d177 = DEF_bram_serverAdapterB_cnt_2_whas____d177;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_3_whas____d186) != DEF_bram_serverAdapterB_cnt_3_whas____d186)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_3_whas____d186, 1u);
	backing.DEF_bram_serverAdapterB_cnt_3_whas____d186 = DEF_bram_serverAdapterB_cnt_3_whas____d186;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_s1___d189) != DEF_bram_serverAdapterB_s1___d189)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_s1___d189, 2u);
	backing.DEF_bram_serverAdapterB_s1___d189 = DEF_bram_serverAdapterB_s1___d189;
      }
      ++num;
      if ((backing.DEF_msgF_first____d165) != DEF_msgF_first____d165)
      {
	vcd_write_val(sim_hdl, num, DEF_msgF_first____d165, 9u);
	backing.DEF_msgF_first____d165 = DEF_msgF_first____d165;
      }
      ++num;
      if ((backing.DEF_x__h1122) != DEF_x__h1122)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1122, 32u);
	backing.DEF_x__h1122 = DEF_x__h1122;
      }
      ++num;
      if ((backing.DEF_x__h2527) != DEF_x__h2527)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2527, 32u);
	backing.DEF_x__h2527 = DEF_x__h2527;
      }
      ++num;
      if ((backing.PORT_EN_sink_put) != PORT_EN_sink_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_sink_put, 1u);
	backing.PORT_EN_sink_put = PORT_EN_sink_put;
      }
      ++num;
      if ((backing.PORT_EN_src_get) != PORT_EN_src_get)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_src_get, 1u);
	backing.PORT_EN_src_get = PORT_EN_src_get;
      }
      ++num;
      if ((backing.PORT_RDY_sink_put) != PORT_RDY_sink_put)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_sink_put, 1u);
	backing.PORT_RDY_sink_put = PORT_RDY_sink_put;
      }
      ++num;
      if ((backing.PORT_RDY_src_get) != PORT_RDY_src_get)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_src_get, 1u);
	backing.PORT_RDY_src_get = PORT_RDY_src_get;
      }
      ++num;
      if ((backing.PORT_sink_put) != PORT_sink_put)
      {
	vcd_write_val(sim_hdl, num, PORT_sink_put, 33u);
	backing.PORT_sink_put = PORT_sink_put;
      }
      ++num;
      if ((backing.PORT_src_get) != PORT_src_get)
      {
	vcd_write_val(sim_hdl, num, PORT_src_get, 33u);
	backing.PORT_src_get = PORT_src_get;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterA_overRun;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun = DEF_CAN_FIRE_RL_bram_serverAdapterB_overRun;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_readBRAM, 1u);
      backing.DEF_CAN_FIRE_RL_readBRAM = DEF_CAN_FIRE_RL_readBRAM;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_readReqBRAM, 1u);
      backing.DEF_CAN_FIRE_RL_readReqBRAM = DEF_CAN_FIRE_RL_readReqBRAM;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_writeBRAM, 1u);
      backing.DEF_CAN_FIRE_RL_writeBRAM = DEF_CAN_FIRE_RL_writeBRAM;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_sink_put, 1u);
      backing.DEF_CAN_FIRE_sink_put = DEF_CAN_FIRE_sink_put;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_src_get, 1u);
      backing.DEF_CAN_FIRE_src_get = DEF_CAN_FIRE_src_get;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterA_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterA_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterA_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterA_overRun;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterA_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterA_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapterB_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapterB_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapterB_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun = DEF_WILL_FIRE_RL_bram_serverAdapterB_overRun;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapterB_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapterB_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_readBRAM, 1u);
      backing.DEF_WILL_FIRE_RL_readBRAM = DEF_WILL_FIRE_RL_readBRAM;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_readReqBRAM, 1u);
      backing.DEF_WILL_FIRE_RL_readReqBRAM = DEF_WILL_FIRE_RL_readReqBRAM;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_writeBRAM, 1u);
      backing.DEF_WILL_FIRE_RL_writeBRAM = DEF_WILL_FIRE_RL_writeBRAM;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_sink_put, 1u);
      backing.DEF_WILL_FIRE_sink_put = DEF_WILL_FIRE_sink_put;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_src_get, 1u);
      backing.DEF_WILL_FIRE_src_get = DEF_WILL_FIRE_src_get;
      vcd_write_val(sim_hdl, num++, DEF_b__h1512, 3u);
      backing.DEF_b__h1512 = DEF_b__h1512;
      vcd_write_val(sim_hdl, num++, DEF_b__h2917, 3u);
      backing.DEF_b__h2917 = DEF_b__h2917;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_1_whas____d170, 1u);
      backing.DEF_bram_serverAdapterA_cnt_1_whas____d170 = DEF_bram_serverAdapterA_cnt_1_whas____d170;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_2_whas____d171, 1u);
      backing.DEF_bram_serverAdapterA_cnt_2_whas____d171 = DEF_bram_serverAdapterA_cnt_2_whas____d171;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_3_whas____d184, 1u);
      backing.DEF_bram_serverAdapterA_cnt_3_whas____d184 = DEF_bram_serverAdapterA_cnt_3_whas____d184;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_s1___d188, 2u);
      backing.DEF_bram_serverAdapterA_s1___d188 = DEF_bram_serverAdapterA_s1___d188;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_1_whas____d176, 1u);
      backing.DEF_bram_serverAdapterB_cnt_1_whas____d176 = DEF_bram_serverAdapterB_cnt_1_whas____d176;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_2_whas____d177, 1u);
      backing.DEF_bram_serverAdapterB_cnt_2_whas____d177 = DEF_bram_serverAdapterB_cnt_2_whas____d177;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_3_whas____d186, 1u);
      backing.DEF_bram_serverAdapterB_cnt_3_whas____d186 = DEF_bram_serverAdapterB_cnt_3_whas____d186;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_s1___d189, 2u);
      backing.DEF_bram_serverAdapterB_s1___d189 = DEF_bram_serverAdapterB_s1___d189;
      vcd_write_val(sim_hdl, num++, DEF_msgF_first____d165, 9u);
      backing.DEF_msgF_first____d165 = DEF_msgF_first____d165;
      vcd_write_val(sim_hdl, num++, DEF_x__h1122, 32u);
      backing.DEF_x__h1122 = DEF_x__h1122;
      vcd_write_val(sim_hdl, num++, DEF_x__h2527, 32u);
      backing.DEF_x__h2527 = DEF_x__h2527;
      vcd_write_val(sim_hdl, num++, PORT_EN_sink_put, 1u);
      backing.PORT_EN_sink_put = PORT_EN_sink_put;
      vcd_write_val(sim_hdl, num++, PORT_EN_src_get, 1u);
      backing.PORT_EN_src_get = PORT_EN_src_get;
      vcd_write_val(sim_hdl, num++, PORT_RDY_sink_put, 1u);
      backing.PORT_RDY_sink_put = PORT_RDY_sink_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_src_get, 1u);
      backing.PORT_RDY_src_get = PORT_RDY_src_get;
      vcd_write_val(sim_hdl, num++, PORT_sink_put, 33u);
      backing.PORT_sink_put = PORT_sink_put;
      vcd_write_val(sim_hdl, num++, PORT_src_get, 33u);
      backing.PORT_src_get = PORT_src_get;
    }
}

void MOD_mkBuffer::vcd_prims(tVCDDumpType dt, MOD_mkBuffer &backing)
{
  INST_bram_memory.dump_VCD(dt, backing.INST_bram_memory);
  INST_bram_serverAdapterA_cnt.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt);
  INST_bram_serverAdapterA_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_1);
  INST_bram_serverAdapterA_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_2);
  INST_bram_serverAdapterA_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_3);
  INST_bram_serverAdapterA_outDataCore.dump_VCD(dt, backing.INST_bram_serverAdapterA_outDataCore);
  INST_bram_serverAdapterA_outData_deqCalled.dump_VCD(dt,
						      backing.INST_bram_serverAdapterA_outData_deqCalled);
  INST_bram_serverAdapterA_outData_enqData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterA_outData_enqData);
  INST_bram_serverAdapterA_outData_outData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterA_outData_outData);
  INST_bram_serverAdapterA_s1.dump_VCD(dt, backing.INST_bram_serverAdapterA_s1);
  INST_bram_serverAdapterA_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapterA_s1_1);
  INST_bram_serverAdapterA_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapterA_writeWithResp);
  INST_bram_serverAdapterB_cnt.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt);
  INST_bram_serverAdapterB_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_1);
  INST_bram_serverAdapterB_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_2);
  INST_bram_serverAdapterB_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_3);
  INST_bram_serverAdapterB_outDataCore.dump_VCD(dt, backing.INST_bram_serverAdapterB_outDataCore);
  INST_bram_serverAdapterB_outData_deqCalled.dump_VCD(dt,
						      backing.INST_bram_serverAdapterB_outData_deqCalled);
  INST_bram_serverAdapterB_outData_enqData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterB_outData_enqData);
  INST_bram_serverAdapterB_outData_outData.dump_VCD(dt,
						    backing.INST_bram_serverAdapterB_outData_outData);
  INST_bram_serverAdapterB_s1.dump_VCD(dt, backing.INST_bram_serverAdapterB_s1);
  INST_bram_serverAdapterB_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapterB_s1_1);
  INST_bram_serverAdapterB_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapterB_writeWithResp);
  INST_countRd.dump_VCD(dt, backing.INST_countRd);
  INST_countRdReq.dump_VCD(dt, backing.INST_countRdReq);
  INST_countWrd.dump_VCD(dt, backing.INST_countWrd);
  INST_mesgInF.dump_VCD(dt, backing.INST_mesgInF);
  INST_mesgOutF.dump_VCD(dt, backing.INST_mesgOutF);
  INST_msgF.dump_VCD(dt, backing.INST_msgF);
  INST_readAddr.dump_VCD(dt, backing.INST_readAddr);
  INST_writeAddr.dump_VCD(dt, backing.INST_writeAddr);
}
